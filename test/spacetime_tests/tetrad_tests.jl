tetrad = Tetrad(ℝ⁴(1.0, 0.0, 0.0, 0.0), ℝ⁴(0.0, -1.0, 0.0, 0.0), ℝ⁴(0.0, 0.0, -1.0, 0.0), ℝ⁴(0.0, 0.0, 0.0, -1.0))
M = mat(tetrad)
@test isapprox(1.0, dot(tetrad.t, tetrad.t, M))
@test isapprox(-1.0, dot(tetrad.x, tetrad.x, M))
@test isapprox(-1.0, dot(tetrad.y, tetrad.y, M))
@test isapprox(-1.0, dot(tetrad.z, tetrad.z, M))

@test isapprox(0.0, dot(tetrad.t, tetrad.x, M))
@test isapprox(0.0, dot(tetrad.t, tetrad.y, M))
@test isapprox(0.0, dot(tetrad.t, tetrad.z, M))
@test isapprox(0.0, dot(tetrad.x, tetrad.y, M))
@test isapprox(0.0, dot(tetrad.x, tetrad.z, M))
@test isapprox(0.0, dot(tetrad.y, tetrad.z, M))

g₀ = ℝ⁴(rand(4))
g₁ = ℝ⁴(rand(4))
g₂ = ℝ⁴(rand(4))
g₃ = ℝ⁴(rand(4))
tetrad1 = Tetrad(g₀, g₁, g₂, g₃)
tetrad2 = Tetrad(rand(4, 4))

@test isapprox(tetrad1.t, g₀)
@test isapprox(tetrad1.x, g₁)
@test isapprox(tetrad1.y, g₂)
@test isapprox(tetrad1.z, g₃)
@test size(mat(tetrad1)) == (4, 4)
@test size(mat(tetrad1 * tetrad2)) == (4, 4)