var documenterSearchIndex = {"docs":
[{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Description = \"How the Hopf fibration works.\"","category":"page"},{"location":"hopffibration.html#The-Hopf-Fibration","page":"Hopf Fibration","title":"The Hopf Fibration","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The Hopf fibration is a fiber bundle with a two-dimensional sphere as the base space and circles as the fiber space. It is the geometrical shape that relates Einstein's spacetime to quantum fields. In this model, we visualize the Hopf fibration by first computing its points via a bundle atlas and then rendering the points in 3D space via stereographic projection. The projection step is necessary because the Hopf fibration is embedded in a four-space. Yet, it has only three degrees of freedom as a three-dimensional shape. The idea that makes this model more special and interesting than a typical visualization is the idea of Planet Hopf, due to Dror Bar-Natan (2010). The basic idea is that since the Hopf map takes the three-dimensional sphere into the two-dimensional sphere, we can pull the skin of the globe back to the three-sphere and visualize it.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Into the bargain, the Earth rotates about its axis every 24 hours. That spinning transformation of the Earth, together with the non-trivial product space of the Hopf bundle, can be encoded naturally into a monolithic visualization. It also makes sense to visualize differential operators in the Minkowski space-time as vectors in a cross-section of the Hopf bundle and then study the properties of spin-transformations. The choice of a gauge transformation (or trivialization) along with Lorentz transformations of Minkowski spacetime should not have any effect on physical laws. It is therefore a great model to understand these transformations and walk the road to reality. The following explains how the source code for generating animations of the Hopf fibration works (alternative views of Planet Hopf). We follow the beginning of chapter 4 of Mark J.D. Hamilton (2018) for a formal definition of the Hopf fibration as a fiber bundle. The book Mathematical Gauge Theory explains the Standard Model to students of both mathematics and physics, covers both the specific gauge theory of the Standard Model and generalizations, and is highly accessible and self-contained. Then, the definitions are going to be used to explain the source code in terms of computational methods and types.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image1) (Image: board2) (Image: image2)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"First, let E and M be smooth manifolds. Then, pi E to M is a surjective and differentiable map between smooth manifolds. Meaning, every element in M has some corresponding element in E via the map pi. Now, let x in M be a point. A fiber of pi over point x is called E_x and defined as a non-empty subset of E as follows: E_x = pi^-1(x) = pi^-1(x) subset E. The singleton of x is taken to the manifold E by the inverse of the map pi. However, to have a set of more than one point let U be a subset of M, U subset M. Then, we have E_U = pi^-1(U) subset E. In this case, E_U is the part of E above the subset U.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image3) (Image: board3) (Image: image4)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Next, define a global section of the map pi like this: s M to E. Considering the definition of pi E to M, the definition of the global section implies that the composition of pi and s is the identity map pi  o  s = Id_M over M. A section such as s can be a local one if we take a subset of M in the domain, U subset M. Then, a local section is defined as s U to E. In a similar way the definition of the local section implies that its composition with pi is the idenity map over the subset: pi  o  s = Id_U. For all points x in subset U, the section s(x) is in the fiber E_x of pi above x, if and only if s is a local section of pi. In this pointwise case, the map pi is restricted to subset U. In other words pi E to U, where U subset M.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image5) (Image: board4) (Image: image6)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"In general, for two points x not = y in M that are not equal, the fibers E_x and E_y of pi over x and y may not be embedded submanifolds of E, or even be diffeomorphic. That means, there may not be a differentiable and invertible map that takes fiber E_x into fiber E_y, and the tangent spaces of E_x and E_y over points x and y may not be naturally linear subspaces of the tangent space of E. But, it is different in the special instance where manifold E = M times F is the product of M and the general fiber F and pi as a map is the projection onto the first factor pi M times F to M. If that is the case, then fibers E_x E_y in F of pi over the two distinct points x not = y in M are embedded submanifolds of E and diffeomorphic. To explain it more clearly, given that condition, there exists an invertible and smooth map taking one fiber to the other, and the tangent spaces of the fibers are directly summed with their respective dual subspaces at points in the fibers to span the whole tangent space of manifold E at points of pi over x and y. Therefore, fiber bundles are the generalization of products E = M times F as twisted products.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image7) (Image: board5) (Image: image8)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Before we define the Hopf action, first describe a scalar multiplication rule between vectors and numbers. Let R denote real numbers, Complex complex numbers, and mathbbH quaternionic numbers. On top of that, take a subset of these sets of numbers such that zero is not allowed to be in them, and denote the subsets as R^*, Complex^*, and mathbbH^* respectively. Now, define the linear right action by scalar multiplication for mathbbK = mathbbR mathbbC mathbbH as the following: mathbbK^n+1setminus0 times mathbbK^* to mathbbK^n+1setminus0. For example, 5 in mathbbR^* is a non-zero scalar number, whereas 1 0 0^T in mathbbR^3setminus0 is a non-zero vector quantity. Per our definition, 5 acts on 1 0 0^T on the right and yields 5 0 0 in mathbbR^3setminus0 as another vector. This rule works the same for fields mathbbK even when the vectorial numbers are represented by matrices.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image9) (Image: board6) (Image: image10)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The linear right action by multiplication is called a free action, because for x in mathbbK^n+1setminus0 and y in mathbbk^* the multiplication x times y yields x if and only if y = Id, as the identity element. For example, if we let x = 0 1 0^T y = 1, then the result of the scalar multiplication is 0 1 0^T times 1 = 0 1 0^T.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image11) (Image: board7) (Image: image12)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"In addition, we define the unit n-sphere, for the Hopf action works on spheres. So, the unit sphere of dimension n is defined as: S^n(w_1 w_2  w_n+1) in mathbbR^n+1  sum_substack1 leq i leq n+1w_i^2 = 1. As an example, the unit circle S^1 in mathbbC is a one-dimensional sphere with n = 1, and w_1^2 + w_2^2 = 1, where w_1 and w_2 are the horizontal and vertical axes in the complex plane, respectively.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image13) (Image: board8) (Image: image14)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Now, Hopf actions are defined as free actions:","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"S^n times S^0 to S^n \nS^2n+1 times S^1 to S^2n+1 \nS^4n+3 times S^3 to S^4n+3 ","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"given by (x lambda) mapsto xlambda.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image15) (Image: board9) (Image: image16)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"An example of a Hopf action is the multiplication of the three-sphere S^3 cong SU(2) subset mathbbC^2 on the right by the unit circle S^1 cong U(1) subset mathbbC. Define the Hopf action as the map Phi S^3 times S^1 to S^3 given by (v w lambda) mapsto (v w) sdot lambda = (vlambda wlambda), for all points in the unit 3-sphere (v w) in S^3 and the unit 1-sphere lambda in S^1. What's more, the Hopf action has two properties:","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(v w) sdot (lambda sdot mu) = ((v w) sdot lambda) sdot mu\n(v w) sdot 1 = (v w)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"forall (v w) in S^3  lambda mu in S^1.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image17) (Image: board10) (Image: image18)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The next idea is about the orbit of a point in the 3-sphere S^3 under the Hopf action. The orbit map is defined as phi S^1 to S^3 given by lambda mapsto (v_0 w_0) sdot lambda, forall (v_0 w_0) in S^3. The orbit map phi is injective and free, meaning that a point in S^3 can not have many points in S^1 and also there exists an identity element such that the action stabalizes a point in S^3 such as (v_0 w_0). Furthermore, the Hopf action Phi S^1 to Diff(S^3) is a homomorphism. It preserves S^3. The Hopf action being a free action implies that the orbit of every point (v_0 w_0) in S^3 is an embedded circle S^1.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image19) (Image: board11) (Image: image20)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Back to the topic of fiber bundles, we recall that the part of manifold E over subset U equals: E_U = pi^-1(U) subset E, where U subset M. Here, there is an equivalence relation in the fiber E_x of pi over x, since the orbit of a point in fiber E_x by phi collapses onto a single point x in U via the projection map pi S^3 to S^3texttextasciitilde. After the collapse of every fiber in manifold E, the quotient space S^3S^1 is seen to be the projective complex line mathbbCP^1 cong S^2. The projective complex line is the ratio of two complex numbers. To see how the space of S^3 is connected compared to S^1, note that every closed loop in S^3 is shrinkable to a single point in a continuous way, tracing a local section. However, a closed loop in S^1 is not shrinkable to a single point. This fact makes S^3 a simply-connected space and S^1 a not simply-connected space.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image21) (Image: board12) (Image: image22)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"We are now almost equipped with the tools to define a fiber bundle in a formal way. Let E F M be manifolds. The projection map pi E to M is a surjective and differentiable map (Every element in M has some element in E). Then, (E pi M F) is called a fiber bundle, (or a locally trivial fibration, or a locally trivial bundle) if for every x in M there exists an open neighborhood U subset M around the point x such that the map pi restricted to E_U can be trivialized as a cross product. Remember that E_U is the part of E of pi over U. In other words, (E pi M F) is called a fiber bundle if there exists a diffeomorphism phi_U E_U to U times F such that pr_1  o  phi_U = pi, meaning the projection onto the first factor of the trivialization map phi_U is the same as the map pi. Also, a fiber bundle is denoted by F to E xrightarrowpi M. In this notation, E denotes the total space, M the base manifold, F the general fiber, pi the projection, and (U phi_U) a local trivialization or bundle chart.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image23) (Image: board13) (Image: image24)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Using a local trivialization (U phi_U) E_x = pi^-1(x) we find that the fiber E_x is an embedded submanifold of the total space E for every point x in M. Meaning, the tangent space of fiber E_x is a linear subsapce of the tangent space of E. The direct sum of the tangent subspace of the general fiber and the tangent subspace of the base manifold equals the tangent space of the total space: T_xE = V_xE bigoplus H_xE.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image25) (Image: board14) (Image: image26)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The composition of the local trivialization with the projection onto the second factor gives us yet another useful map between fibers E_x over x and the general fiber F. It is a differentiable and invertible map (diffeomorphism) and equals phi_U = pr_2  o  phi_U _E_x E_x to F. Given that the local trivialization phi_U E_U to U times F is a diffeomorphism (invertible and smooth), the projection pr_1 U times F to U onto the first factor of phi_U is a submersion. That is to say the differntial of pr_1 is surjective. D pr_1 T(U times F) to TU takes vectors from the tangent space of U times F into vectors in the tangent space of U, such that every element of TU has some element in T(U times F). As a result, the map pi E to M is also a submersion, which means D pi TE to TM is surjective. Every tangent vector in the codomain TM has some tangent vector in the domain TE.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image27) (Image: board15) (Image: image28)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"So far, we have established that the bundle projection map, taking points from the total space into points in the base space pi E to M, is a submersion. For that reason, the tangent space of the base manifold M is a linear subset of the tangnet space of the total space manifold E. Now, we can use the regular value theorem for shining a light on the submersion of pi. Let a point x in M be a regular value of the smooth map pi E to M, and let the fiber E_x = pi^-1(x) be the preimage of the point x. Then, the map pi^-1 is an embedded submanifold of E of dimension dim  E_x = dim  E - dim  M. Meaning, the tangent space of fiber E_x is a linear subspace of the tangent space of E. We can verify the result of the theorem for the Hopf bundle F to E xrightarrowpi M where dim  E = 3 and dim  M = 2. The regular value theorem implies that the Hopf fiber is one-dimensional, dim  E_x = 3 - 2 = 1, as an embedded submanifold of the total space E. With that formal introduction we are going to sketch a visual 3D model next.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"(Image: image29) (Image: board16) (Image: image30) (Image: image31)","category":"page"},{"location":"hopffibration.html#Import-the-Required-Packages","page":"Hopf Fibration","title":"Import the Required Packages","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Begin by importing a few software packages for doing algebraic operations, working with files and graphics processing units. Besides Porta, we need to use three packages: FileIO, GLMakie and LinearAlgebra. First, FileIO is the main package for IO and loading all different kind of files, including images and Comma-Separated Value (CSV) files. Second, interactive data visualizations and plotting in Julia are done with GLMakie. Finally, LinearAlgebra, as a module of the Julia programming language, provides array arithmetic, matrix factorizations and other linear algebra related functionality. However, through years of working with geometrical structures and shapes we have encapsulated certain mathematical computations and transformations into custom types and interfaces, which make up most of the functionalities of project Porta. In addition, we wrapped complicated computer graphics workflows inside custom types in order to increase the interoperability of our types with those of external packages such as GLMakie.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    import FileIO\n    import GLMakie\n    import LinearAlgebra\n    using Porta","category":"page"},{"location":"hopffibration.html#Set-Hyperparameters","page":"Hopf Fibration","title":"Set Hyperparameters","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"There are essential hyperparameters that determine the complexity of graphics rendering as well as the position and orientation of a camera, through which we render a scene. Since the output of the model is an animation video, we need to set the figure size to 1920 by 1080 to have a full high definition window, in which the scene is located. Most of the shapes and objects that we put inside of the scene are two-dimensional surfaces. Therefore, the segmentation of most shapes requires two integer values for determining how much compute power and resolution we are willing to spend on the animation. Furthermore, the shape of a circle is the most common in our scenes because of the magic of complex numbers. It is known that using 30 segments results in smooth low-polygon circles. So for a two-dimensional sphere a 30 by 30 segmented two-surface should look good. Set the segments equal to 30, and less curvy shapes will look even better in consequence. But, an animation extends through time frame by frame and so we need to set the total number of frames. In this way, specifying the number of frames determines the length of the video. For example, 1440 frames make a one-minute video at 24 frames per second.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    figuresize = (1920, 1080)\n    segments = 30\n    frames_number = 1440","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"A model means a complicated geometrical shape contained inside a graphical scene. Every model has a name to use as the file name of the output video. Here, we choose the name planethopf as we construct an alternative view of the Planet Hopf by Dror Bar-Natan (2010). Heinz Hopf in 1931 discovered a way to join circles over the skin of the globe. The discovery defines a fiber bundle where the base space is the spherical Earth and the fibers are circles. But, the circles are all mutually parallel and linked. Moreover, the Earth goes through a full rotation about the axis that connect the poles every 24 hours. So it is not surprising that the picture of a non-trivial bundle and the spinning of the base space coordinates (longitudes) makes for a ridiculous geometric shape. But, the surprising fact is that all of it is visualizable as a 3D object. Then, we use a dictionary that maps indices to names in order to keep track of boundary data on the globe and the name of each boundary as a sovereign country.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    modelname = \"planethopf\"\n    indices = Dict()","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The Hopf fibration, as a fiber bundle, has an inner product space. The inner product space is symmetric, linear and positive semidefinite. The last property means that the product of a point in the bundle with itself is always non-negative, and it is zero if and only if the point is the zero vector. The abstract inner product space allows us to talk about the length of vectors, the distance between two points and the idea of orthogonality between two vectors. A pair of vectors are orthogonal when they make a right angle with each other and as a consequence their product is equal to zero. For all u v v_1 v_2 in V and alpha beta in R the following are the properties of the abstract inner product space:","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Symmetric: u v = v u\nLinear: u alpha v_1 + beta v_2 = alpha u v_1 + beta u v_2\nPositive semidefinite: u u geq 0 for all u in V with u u = 0 if and only if u = 0","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Now, in order to skin the horizontal cross-sections of the bundle for visualization we need to start with a base point, which is denoted by x. At the tangent space of the base point q, the inner product space (characterized by a connection one-form) splits the tangent space of the bundle E at x into two linear subspaces: horizontal and vertical.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"T_q E = V_q E bigoplus H_q E","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"In terms of the connection, the two subspcaes are orthogonal. A chart is a four-tuple of real numbers to be used as a pair of closed intervals in the horizontal subspace. Then, using the exponential map one can travel in both horizontal and vertical directions and cover the whole bundle within the lengths of the chart intervals. Within the boundary of the chart and with an additional vertical coordinate (a gauge) we can define a tubular neighborhood of the base point q. The first two elements of the four-tuple chart give the interval along the first basis vector and the last two elements give the interval along the second basis vector. As for the third basis vector of the tangent space (the vertical subspace) we use a beginning and an ending gauge.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"For the purpose of the construction of the Hopf fibration we define the bundle atlas of a general fiber bundle F to E xrightarrowpi M as an open covering U_i_i in I of the base manifold M together with bundle charts phi_i E_U_i to U_i times F. Putting the open covering with bundle charts a bundle atlas is denoted by U_i phi_i_i in I. The index i suggests that a bundle atlas should have more than one bundle chart whenever it is a non-trivial bundle (a twisted product rather than a Cartesian product). In order to cover the Hopf bundle we use the exponential matrix function supplied with linear combinations of elements from the Lie algebra so(4), which produces elements in the Lie group SO(4) that push a base point around the 3-sphere. As a side note, a Lie algebra is a vector space V that is equipped with the Lie bracket map sdot sdot V times V to V, with sdot sdot having three properties: bilinear, antisymmetric and satisfies the Jacobi identity. We choose a base point in the 3-sphere q in S^3 and then use Lie algebra elements before exponentiation in order to rotate the 3-sphere to cover every other point in the total space S^3 over the chart.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    q = Quaternion(ℝ⁴(0.0, 0.0, 1.0, 0.0))\n    chart = (-π / 4, π / 4, -π / 4, π / 4)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Next, we define five scalars in the Lie algebra of so(2), identified with imathbbR, in order to provide different gauge transformations for pullbacks by the Hopf fibration (whirls and base maps). The exponential function takes the gauge values to the unit circle S^1 = U(1) cong SO(2) given by exp(im * gauge). For creating a clearer view we are going to slice up the Hopf fibers (orbits) and set different values for their respective alpha channels. The names gauge1, gauge2, gauge3, gauge4 and gauge5 are used to provide the Hopf actions when we construct and update the shapes. 0.0 means the trivial action whereas 2π means the full orbit around a Hopf fiber. Looking at the values of these names we can see that a Hopf fiber will be cut into four quarters. We can make some quarters opaque and others see-through for better visibility.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    gauge1 = 0.0\n    gauge2 = π / 2\n    gauge3 = float(π)\n    gauge4 = 3π / 2\n    gauge5 = 2π","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The fundamental physics is based on the gauge symmetry of the product SU(3) times SU(2) times U(1) and the symmetry of spacetime as a Riemannian manifold M that is equipped with a metric. Therefore, physical laws in nature must be the same under two sets of choices: the choice of gauge transformations and the choice of an inertial reference frame in spacetime. In this model, we understand the choice of the guage symmetry by studying the Hopf action and the choice of an inertial frame in Minkowski space-time by a change-of-basis transformation on the Hopf bundle. The change-of-basis transformation is denoted by matrix M and is applied to the total space of the Hopf bundle via a matrix-vector product. Here, we initialize the matrix M with the idenity.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    M = I(4)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"In order to get the essence of these different choices and integrate them into a visual model we first note that Lorentz transformations of null vectors in the tangent space of spacetime is the same as transforming any other timelike (non-null) vectors. Second, The Hopf bundle of the 3-sphere has a representation in the Lie group S^3 = SU(2) and the Hopf action is represented by actions of S^1 = U(1) as a linear scalar multiplication on the right. But, null vectors have length zero in terms of the Lorentzian metric, whereas the Hopf bundle is made of vectors of unit length in terms of the Euclidean metric. Fortunately, these vectors coincide as unit quaternions and so their transformations can be unified into a single visual model. If we coordinatize a null vector in spacetime as u = 𝕍(T, X, Y, Z) then the corresponding quaternion q = Quaternion(T, X, Y, Z) takes the same coordinates. We assert that u is null and q is of unit norm, with an approximate equality check. The precision of the assertion is given by the name tolerance, which equals 1e-3.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    T, X, Y, Z = vec(normalize(ℝ⁴(1.0, 0.0, 1.0, 0.0)))\n    u = 𝕍(T, X, Y, Z)\n    q = Quaternion(T, X, Y, Z)\n    tolerance = 1e-3\n    @assert(isnull(u, atol = tolerance), \"u in not a null vector, $u.\")\n    @assert(isapprox(norm(q), 1, atol = tolerance), \"q in not a unit quaternion, $(norm(q)).\")","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The camera is a viewport trough which we see the scene. It is a three-dimensional camera and much like a drone it has six features to help position and orient itself in the scene. Accordingly, a three-vector in the Euclidean 3-space E^3 determins its position in the scene, another 3-vector specifies the point at which it looks, and a third vector controls the up direction of the camera. The third 3-vector is needed because the camera can rotate through 360 degrees about the axis that connects its own position to the position of the subject. Using these three 3-vectors we control how far away we are from the subject, and how upright the subject is. ","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    eyeposition = normalize(ℝ³(1.0, 1.0, 1.0)) * π * 0.8\n    lookat = ℝ³(0.0, 0.0, 0.0)\n    up = normalize(ℝ³(1.0, 0.0, 0.0))","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Each of the eyeposition, lookat and up vectors are in the three-real-dimensional vector space ℝ³. The structure of the abstract vector space of ℝ³ includes: associativity of addition, commutativity of addition, the zero vector, the inverse element, distributivity Ι, distributivity ΙΙ, associativity of scalar multiplication, and the unit scalar 1. Also, the product space associated with ℝ³ is symmetric, linear and positive semidefinite (see real3_tests.jl). The same goes for the structure of 4-vectors in ℝ⁴ as we are going to encounter in this model. An abstract vector space (V mathbbK + ) consists of four things:","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"A set of vector-like objects V = u v \nA field mathbbK of scalar numbers, complex numbers, quaternions, or octonions (any one of the division algebras)\nAn addition operation + for elements of V that dictates how to add vectors: u + v\nA scalar multiplication operator  for scaling a vector by an element of the field","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"An abstract vector space satisfies eight axioms. For all vectors u v w in V and for all scalars alpha beta in mathbbK the following properties are true:","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Associativity of addition: u + (v + w) = (u + v) + w\nCommutativity of addition: u + v = v + u\nThere exists a zero vector 0 in V such that u + 0 = 0 + u = u\nFor every u there exists an inverse element -u such that u + (-u) = u - u = 0\nDistributivity I: alpha (u + v) = alpha u + alpha v\nDistributivity II: (alpha + beta) u = alpha u + beta u\nAssociativity of scalar multiplication: alpha (beta u) = (alpha beta) u\nThere exists a unit scalar 1 such that 1u = u","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Interestingly, if the field mathbbK is an Octonian number then the axiom of the commutativity of addition becomes false. The plan is to first load a geographic data set, then construct a few shapes, and animate a four-stage transformation of the shapes. Model versioning can be applied here using different stages. The transformations are subgroups of the Lorentz transformation in the Minkowski vector space 𝕍, which is a tetrad and origin point away from the Minkowski space-time 𝕄. Both 𝕍 and 𝕄 inherit the properties of the abstract vector space. See minkowskivectorspace_tests.jl and minkowskispacetime_tests.jl for use cases.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    totalstages = 4","category":"page"},{"location":"hopffibration.html#Load-the-Natural-Earth-Data","page":"Hopf Fibration","title":"Load the Natural Earth Data","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Next, we need to load two image files: an image to be used as a color reference, and another one to be used as surface texture for sections of the Hopf bundle. This is the first example of using FileIO to load image files from hard drive memory. Both images are made with a software called QGIS, which is a geographic information system software that is free and open-source. But, the data comes from Natural Earth Data. Natural Earth is a public domain map dataset available at 1:10m, 1:50m, and 1:110 million scales. Featuring tightly integrated vector and raster data, with Natural Earth you can make a variety of visually pleasing, well-crafted maps with cartography or GIS software. We downloaded the Admin 0 - Countries data file from the 1:10m Cultural Vectors link of the Downloads page. It is a large-scale map that contains geometry nodes and attributes.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    reference = FileIO.load(\"data/basemap_color.png\")\n    mask = FileIO.load(\"data/basemap_mask.png\")","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"As for the image files, we paint the boundaries using the gemometry nodes, and add a grid to be able to visualize distortions of the Euclidean metric of the underlying surface. Therefore, the reference is the clean image from which we pick colors, whereas the mask has a grid and transparency for visualization purposes.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    attributespath = \"data/naturalearth/geometry-attributes.csv\"\n    nodespath = \"data/naturalearth/geometry-nodes.csv\"\n    countries = loadcountries(attributespath, nodespath)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The geometry nodes of the data set consist of latitudes and longitudes of boundaries. But, geometry attributes feature various geographical, cultural, economical and geopolitical values. Of these features we only need the names and geographic coordinates. To not limit the use cases of this model, the generic function loadcountries loads all of the data features by supplying it with the file paths of attributes and nodes. Data versioning can be applied here using different file versions. The attributes and nodes files are comma-separated values.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"At a high level of description, the process of loading boundary data is as follows: First, we use FileIO to open the attributes file. Second, we put the data in a DataFrames object to have in-memory tabular data. Third, sort the data according to shape identification. Fourth, open the nodes file in a DataFrame. Fifth, group the attributes by the name of each sovereign country. Sixth, determine the number of attribute groups by calling the generic function length. Seventh, define a constant ϵ = 5e-3 to limit the distance between nodes so that the computational complexity becomes more reasonable. Eighth, define a dictionary that has the keys: shapeid, name, gdpmd, gdpyear, economy, partid, and nodes. Finally, for each group of the attributes we extract the data corresponding to the dictionary keys and push them into array values.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Part of the difficulty with the data loading process is that each sovereign country may have more than one connected component (closed boundary). That is why we store part identifications as one of the dictionary keys. In this process, the part with the greatest number of nodes is chosen as the main part and is pushed into the corresponding array value. All of the array values are ordered and have the same length so that indexing over the values of more than one key becomes easier. Once the part ID of each country name is determined, we make a subset of the data frame related to the part ID and then extract the geographic coordinates in terms of latitudes and longitudes. In fact, we make a histogram of each unique part ID and count the number of coordinates. The part ID with the greatest number of coordinates is selected for creating the subset of the data frame. Next, the coordinates are transformed into the Cartesian coordinate system from the Geographic one.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Finally, we decimate a curve containing a sequence of coordinates by removing points from the curve that are farther from each other than the given threshold ϵ. It is a step to make sure that the boundary data has superb quality while managing the size of data for computation complexity. The generic function decimate implements the Ramer–Douglas–Peucker algorithm. It is an iterative end-point fit algorithm suggested by Dror Bar-Natan (2010) for this model. Since a boundary is modelled as a curve of line segments, we set a segmentation limit. But, the decimation process finds a curve that is similar in shape, yet has fewer number of points with the given threshold ϵ. In short, decimate recursively simplifies the segmented curve of a closed boundary if the maximum distance between a pair of consecutive points is greater than ϵ. The distance between two abstract vectors is given by d(u v) equiv u - v = sqrt(u - v) (u - v).","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    boundary_names = [\"United States of America\", \"Antarctica\", \"Australia\", \"Iran\", \"Canada\", \"Turkey\", \"New Zealand\", \"Mexico\", \"Pakistan\", \"Russia\"]\n    boundary_nodes = Vector{Vector{ℝ³}}()\n    for i in eachindex(countries[\"name\"])\n        for name in boundary_names\n            if countries[\"name\"][i] == name\n                push!(boundary_nodes, countries[\"nodes\"][i])\n                println(name)\n                indices[name] = length(boundary_nodes)\n            end\n        end\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"As the boundary data is massive in number (248 countries) we need to select a subset for visualization. 10 countries selected from a linear space of alphabetically sroted names should be representative of the whole Earth. Then again, using only three distinct points in the 2-sphere one can infer the transformations from the sphere into itself. Also, Antarctica should be added due to its special coordinates at the south pole, to give the user a better sense of how bundle sections are expanded and distorted. As soon as we have the names of the selection, we can proceed with populating the dictionary of indices that relates the name of each country with the corresponding index in boundary data. Using the dictionary we can read the attributes of countries by giving just the name as argument.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    points = Vector{Quaternion}[]\n    for i in eachindex(boundary_nodes)\n        _points = Quaternion[]\n        for node in boundary_nodes[i]\n            r, θ, ϕ = convert_to_geographic(node)\n            push!(_points, q * Quaternion(exp(ϕ / 4 * K(1) + θ / 2 * K(2))))\n        end\n        push!(points, _points)\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"We instantiate a vector of a vector of type Quaternion to store boundary data. The outermost vector contains elements of different countries. But, the innermost vector contains the pullback of the geographic nodes by the Hopf map in the 3-sphere. After conversion to the Geographic coordinate system from the Cartesian coordinates, the points are pulled back by pi using the statement q * Quaternion(exp(ϕ / 4 * K(1) + θ / 2 * K(2))). It is a right multiplication of the base point q by the exponential function, supplied with the geographic coordinates θ and ϕ. Now that we have the points we can make a 3D scene.","category":"page"},{"location":"hopffibration.html#Make-a-Computer-Graphical-Scene","page":"Hopf Fibration","title":"Make a Computer Graphical Scene","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Scenes are fundamental building blocks of GLMakie figures. In this model, the layout of the Figure (graphical window) is a single Scene, because we have been able to directly plot all of the information about the bundle geometry and topology inside the same scene. The figure is supplied with the hyperparameter figuresize that we defined earlier. Then, we set a black theme to have black background around the window at the margins. Next, we instantiate a gray point light and a lighter gray ambient light. The lights together with the figure are then passed to LScene to construct our scene. We pass the symbol :white as the argument to the background keyword as it makes for the most visible scene.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    makefigure() = GLMakie.Figure(size = figuresize)\n    fig = GLMakie.with_theme(makefigure, GLMakie.theme_black())\n    pl = GLMakie.PointLight(GLMakie.Point3f(0), GLMakie.RGBf(0.0862, 0.0862, 0.0862))\n    al = GLMakie.AmbientLight(GLMakie.RGBf(0.9, 0.9, 0.9))\n    lscene = GLMakie.LScene(fig[1, 1], show_axis=false, scenekw = (lights = [pl, al], clear=true, backgroundcolor = :white))","category":"page"},{"location":"hopffibration.html#Construct-Base-Maps","page":"Hopf Fibration","title":"Construct Base Maps","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The base map is the pullback of the skin of the globe U subset S^2 by the Hopf map pi S^3 to S^2, representing a local horizontal cross-section of the bundle. The pushforward of horizontal vectors by the Hopf map leaves them unchanged. However, vectors in the vertical subsapce of the tangent space of the Hopf bundle are in the kernel of the Hopf map (they are sent to zero).","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"We use a 64-bit floating point number to parameterize an element of the Lie algebra so(2), before exponentiating it into an element of the Lie group SO(2) to be used for the orbit map phi S^1 to S^3, because a local horizontal cross-section uses the same scalar number for the entirety of subset U subset S^2. The subset U is bounded with a two-dimensional chart. A chart can be thought of as a rectangle whose sides are at most π in length. But, the length of a great circle of the three-dimensional sphere is 2π and the maximum length of chart sides is limited, unless we want to cover S^3 twice. To keep things simple, we use one bundle chart and cover a subset U of side length π. The Hopf bundle does not admit a global section. After exponentiating the base point q in horizontal directions for a magnitude beyond π, the orientation of the surface reverses and a sharp twist of the surface happens.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The Hopf bundle is embedded in ℝ⁴, the real-four-dimensional space. The coordinates are defined as unit quaternions where the basis vectors are represented by the symmetry group of the rotations of an orthogonal tetrad, namely SO(4). vectors u and v are orthogonal if and only if their inner product equals zero u v = 0. When we talk about Hopf actions and bundle charts, we talk about values that are used to linearly combine elements of the Lie algebra of so(4), vectors in the tangent space of the bundle at point x. Then, we use the matrix exponential map for computing Lie group values in SO(4). Given a fixed gauge, a point in the Lie group stemming from base point x is reconstructed from a Lie algebra element by executing the statement x * Quaternion(exp(θ * K(1) + -ϕ * K(2)) * exp(gauge * K(3))), where scalars θ and ϕ denote the latitude and longitude components in the bundle chart, respectively. K(1) and K(2) denote 4x4 matrices with real elements as basis vectors of the Lie algebra so(4). The tangent space of the bundle at point x spans horizontally with the exponential map of a linear combination of basis vectors K(1) and K(2), whereas it spans vertically in the K(3) direction. This way we get a strictly horizontal section of the bundle in terms of elements of the Lie group SO(4), given a gauge. The elements of SO(4) go on to push the base point x around and end up as observables to be rendered graphically.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    lspaceθ = range(chart[1], stop = chart[2], length = segments)\n    lspaceϕ = range(chart[3], stop = chart[4], length = segments)\n    [project(normalize(M * (x * Quaternion(exp(θ * K(1) + -ϕ * K(2)) * exp(gauge * K(3)))))) for ϕ in lspaceϕ, θ in lspaceθ]","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Using the eigendecomposition method LinearAlgebra.eigen, we can compute the matrix M to change the basis of the bundle while keeping the coordinates invariant. So the change-of-basis is the final step of the construction of the observables after using the geographic coordinates and the gauge. Observables.jl allows us to define the points that are to be rendered in the scene, in a way that they can listen to changes dynamically. Later, when we apply transformations to the bundle, including the change-of-basis, the idea is to only change the top-level observables and avoid reconstructing the scene entirely. The change of basis is a bilinear transformation of the tetrad (of Minkowski space-time 𝕄) in ℝ⁴ as a matrix-vector product (M * x for example). Here we denote the transformation as matrix M, which takes a Quaternion number as input and spits out a new number of the same type. The input and output bases must be orthonormal as the numbers must remain unit quaternions after the transformation. Constructing a base map requires a few arguments: the scene object, the base point q, the gauge, the change-of-basis transformation M, the chart, the number of segments of the lattice of observables, the tuxture of the surface and the optional transparency setting. Construct four base maps in order to visualize a more complete picture of the Hopf fibration using four different sections. But, the sections are going to be distinguished from one another and updated with gauge transformations later when we animate them.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    basemap1 = Basemap(lscene, q, gauge1, M, chart, segments, mask, transparency = true)\n    basemap2 = Basemap(lscene, q, gauge2, M, chart, segments, mask, transparency = true)\n    basemap3 = Basemap(lscene, q, gauge3, M, chart, segments, mask, transparency = true)\n    basemap4 = Basemap(lscene, q, gauge4, M, chart, segments, mask, transparency = true)","category":"page"},{"location":"hopffibration.html#Construct-Whirls","page":"Hopf Fibration","title":"Construct Whirls","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"A Whirl is the shape of a closed boundary in the map of the Earth that is pulled back by the Hopf map pi S^3 to S^2. As a reminder, boundaries on the map of the Earth are specified by two real values: latitude θ and longitude ϕ. The boundary of each country in boundary_names is lifted up from the base manifold using the following statement: q * Quaternion(exp(ϕ / 4 * K(1) + θ / 2 * K(2))). The pullback operation is realized by pushing the base point q in a horizontal direction given by coordinates on the surface of the Earth. Then, a gauge transformation is applied by executing the statement x * Quaternion(exp(K(3) * gauge)), with the given scalar gauge in the direction K(3) of the tangent space at point x of the bundle. By varying gauge in a linear space of floating point values, a Whirl (a pullback by the Hopf map) takes a three-dimensional volume. In the special case where gauge is a range of values, starting at zero and stopping at 2π, the Whirl makes a Hopf band. The degree of the twist in the band is directly proportional to the value of gauge. Multiplying x on the right by the exponentiation of K(3) * gauge pushes x in the vertical subspace of the bundle and makes an orbit. Therefore, the orbit map phi S^1 to S^3 is given by x[i] * Quaternion(exp(K(3) * gauge).","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    lspacegauge = range(gauge1, stop = gauge2, length = segments)\n    [project(normalize(M * (x[i] * Quaternion(exp(K(3) * gauge))))) for i in 1:length(x), gauge in lspacegauge]","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"There are four sets of whirls: some whirls are more solid and some whirls are more transparent. This separation is done to highlight the antipodal points of the three-dimensional sphere S^3, given by x_1^2 + x_2^2 + x_3^2 + x_4^2 = 1, where x_1 x_2 x_3 x_4^T in R^4. It also helps to visualize the direction of the null plane under transformations of the bundle. Since every pair of points that are infinitestimally close to each other in a horizontal cross-section, defines a differential operator. And Hopf actions, transformations from the bundle into itself change the direction of the operator as it twists. The operator is also called a spin-vector in Minkowski vector space 𝕍. Therefore it can be visualized directly how the operator changes sign by comparing a pullback into S^3 at antipodal points of an orbit.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    whirls1 = []\n    whirls2 = []\n    whirls3 = []\n    whirls4 = []\n    for i in eachindex(boundary_nodes)\n        color1 = getcolor(boundary_nodes[i], reference, 0.1)\n        color2 = getcolor(boundary_nodes[i], reference, 0.2)\n        color3 = getcolor(boundary_nodes[i], reference, 0.3)\n        color4 = getcolor(boundary_nodes[i], reference, 0.4)\n        whirl1 = Whirl(lscene, points[i], gauge1, gauge2, M, segments, color1, transparency = true)\n        whirl2 = Whirl(lscene, points[i], gauge2, gauge3, M, segments, color2, transparency = true)\n        whirl3 = Whirl(lscene, points[i], gauge3, gauge4, M, segments, color3, transparency = true)\n        whirl4 = Whirl(lscene, points[i], gauge4, gauge5, M, segments, color4, transparency = true)\n        push!(whirls1, whirl1)\n        push!(whirls2, whirl2)\n        push!(whirls3, whirl3)\n        push!(whirls4, whirl4)\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The color of a Whirl should match the color of the inside of its own boundary at every horizontal section, also known as a base map. The generic function getcolor finds the correct color to set for the Whirl. It takes as input a closed boundary (a vector of Cartesian points), a color reference image and an alpha channel value to produce an RGBA 4-color. getcolor finds a color according to the following steps: First, it determines the number of points in the given boundary. Second, gets the size of the reference color image as height and width in pixels. Third, converts all of the boundary points to Geographic coordinates. Fourth, finds the minimum and maximum values of the latitudes and longitudes of the boundary. Fifth, creates a two-dimensional linear space (a flat grid or lattice) that ranges within the upper and lower bounds of the latitudes and longitudes. Sixth, finds the Cartesian two-dimensional coordinates of the points in the image space by normalizing the geographic coordinates and multiplying them by the image size. Seventh, picks the color of each grid point with the Cartesian two-dimensional coordinates in the image space as the index. Eighth, Makes a histogram of the colors by counting the number of each color. Finally, sorts the histogram and picks the color with the greatest number of occurance. (See earth.jl from the src directory for implementation.)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"However, step seven makes sure that the coordinates in the linear 2-space are inside the closed boundary, otherwise it skips the index and continues with the next index in the grid. In this way we don't pick colors from the boundaries of neighboring countries over the globe. The generic function isinside is used by getcolor to determine whether the given point is inside the given boundary or not. But first, the boundary needs to become a polygon in the Euclidean 2-space of coordinates in terms of latitude and longitude. This is the same as geographic coordinates with the radius of Earth set equal to 1 identically, hence the spherical Earth model of the ancient Greeks. After we make a polygon out of the boundary, the generic function rayintersectseg determines whther a ray cast from a point of the linear grid intersects an edge with the given point p and edge. Here, p is a two-dimensional point and edge is a tuple of such points, representing a line segment. Eventhough this algorithm should work in theory, some boundaries are too small to yield a definite color via getcolor and the color inference algorithm returns a false negative in those cases. So the default color may be white for a limited number of cases out of 248 countries. Once we have the color of the whirls, we can proceed to construct the whirls by supplying the generic function Whirl with the following arguments: the scene object, the boundary points lifetd via an arbitrary section, the first fiber action value (gauge), the second action value, the change-of-basis function M, the number of surface segments, the color and the optional transparency setting.","category":"page"},{"location":"hopffibration.html#Compute-a-Four-Screw","page":"Hopf Fibration","title":"Compute a Four-Screw","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"We are going to execute a motion around a closed loop in the Lie group SL(2 mathbbC), and then multiply every point in the Hopf bundle by an element of the loop. A four-screw is a subset of the Lie group SL(n mathbbK) = A in Mat(n times n mathbbK)  det(A) = 1, square matrices of Complex numbers whose volume form (determinant) equals 1. Here, the number n = 2 and the field mathbbK = mathbbC. A four-screw is a kind of restricted Lorentz transformation where a z-boost and a proper rotation of the celestial sphere are applied. The transformation lives in a four-complex dimensional space and it has six degrees of freedom (the same number of dimensions as SO(4)). By parameterizing a four-screw one can control how much boost and rotation a transformation shuld have. Here, w as a positive scalar controls the amount of boost, whereas angle ψ controls the rotation component of the transform. But, the parameterization accepts rapidity as input for the boost. So we take the natural logarithm of w (log(w) = phi) in order to supply the transformer with the required rapidity argument. First, we set w equal to one in order to preserve the scale of the Argand plane and animate the angle ψ through zero to 2π for rotation. The name progress denotes a scalar from zero to one for instantiating a different transformation at each frame of the animation.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    if status == 1 # roation\n        w = 1.0\n        ϕ = log(w) # rapidity\n        ψ = progress * 2π\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"In the second case, we fix the rotation angle ψ by setting it to zero, and this time animate the rapidity by changing the value of ϕ at each time step.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    if status == 2 # boost\n        w = max(1e-4, abs(cos(progress * 2π)))\n        ϕ = log(w) # rapidity\n        ψ = 0.0\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Third, in order to get a complete picture of a four-screw we animate both rapidity ϕ and rotation ψ, at the same time.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    if status == 3 # four-screw\n        w = max(1e-4, abs(cos(progress * 2π)))\n        ϕ = log(w) # rapidity\n        ψ = progress * 2π\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"A four-real-dimensional vector in the Minkowski vector space 𝕍 is null if and only if its Lorentz norm is equal to zero. The length or norm of an abstract vector u in V is equivalent to the square root of the inner product of the vector with itself: u u equiv sqrtu u in R. The inner product of vectors u and v in an abstract vector space is given by u^T * g_munu * v, where g_munu denotes the metric 2-tensor. However, as an instantiation in Minkowski vector space 𝕍 with signature (+, -, -, -), the matrix g_munu is a diagonal of the form: g_munu = beginbmatrix 1  0  0  0  0  -1  0  0  0  0  -1  0  0  0  0  -1 endbmatrix.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Furthermore, a vector in 𝕍 is in the tangent space at some point in Einstein's spacetime, where the metric g_munu will not be diagonal in general. Since a Lorentz transformation of null vectors has the same effect on vectors that are not null, it makes the visualization easier to study transformations on null vectors only. On the other hand, in the Euclidean 4-space E^4 the metric g_munu is replaced by identity matrix of dimension four. The null vectors that we use here in the Minkowski vector space have length zero in terms of the Lorentz norm, but have Euclidean norm equal to one, and so they can be regarded as elements of unit Quaternion. Therefore, what we are animating here is the transformation of unit quaternions that represent null vectors. ","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The change-of-basis transformations that we have used to instantiate Whirl and Basemap types above, can accomodate the effects of a Lorentz transformation. Then, by setting ψ and ϕ we can define a generic function transform to take Quaternion numbers as input and to give us the transformed number as output.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    transform(x::Quaternion) = begin\n        T, X, Y, Z = vec(x)\n        X̃ = X * cos(ψ) - Y * sin(ψ)\n        Ỹ = X * sin(ψ) + Y * cos(ψ)\n        Z̃ = Z * cosh(ϕ) + T * sinh(ϕ)\n        T̃ = Z * sinh(ϕ) + T * cosh(ϕ)\n        Quaternion(T̃, X̃, Ỹ, Z̃)\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Every transformation in an abstract vector space such as the Minkowski vector space 𝕍 has a matrix representation. For constructing the matrix of the transform we just need to compute it four times with basis vectors. The transformation of the basis vectors of unit quaternions by transform are denoted by r₁, r₂, r₃ and r₄. The matrix _M is a four by four real matrix whose rows are r₁ through r₄. _M is the matrix representation of the transformation that is induced by transform.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    r₁ = transform(Quaternion(1.0, 0.0, 0.0, 0.0))\n    r₂ = transform(Quaternion(0.0, 1.0, 0.0, 0.0))\n    r₃ = transform(Quaternion(0.0, 0.0, 1.0, 0.0))\n    r₄ = transform(Quaternion(0.0, 0.0, 0.0, 1.0))\n    _M = reshape([vec(r₁); vec(r₂); vec(r₃); vec(r₄)], (4, 4))","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"But, _M doesn't necessarily take unit quaternions to unit quaternions. By decomposing _M into eigenvalues and eigenvectors we can manipulate the transformation so that it takes unit quaternions to unit quaternions without modifying its effect on the geometrical structure of Argand plane. Despite the fact that _M is a matrix of real numbers, it has complex eigenvalues, as it involves a rotation. By constructing a four-complex-dimensional vector off of the eigenvalues we can normalize _M by normalizing the vector of eigenvalues, before reconstructing a unimodular, unitary transformation (a normal matrix). The reconstructed matrix is called M.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    decomposition = LinearAlgebra.eigen(_M)\n    λ = LinearAlgebra.normalize(decomposition.values) # normalize eigenvalues for a unimodular transformation\n    Λ = [λ[1] 0.0 0.0 0.0; 0.0 λ[2] 0.0 0.0; 0.0 0.0 λ[3] 0.0; 0.0 0.0 0.0 λ[4]]\n    M = real.(decomposition.vectors * Λ * LinearAlgebra.inv(decomposition.vectors))","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"We can assert that the transformation that is induced by M takes null vectors to null vectors in Minkowski vector space 𝕍. If that is the case, then the reconstructed transformation M is a faithful representation and it only scales the extent of null vectors rather than null directions, compared to _M. A representation f is called a faithful representation when for different numbers g and q, f(g) and f(q) are equal if and only if g = q.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"A spin-vector is based on the space of future or past null directions in Minkowski space-time. The field ζ of a SpinVector represents points in Argand plane. Therefore, if v is obtained with the transformation of u by M, then the respective spin-vectors s and s′ should tell us how M changes Argand plane. To be precise, three different points in Argand plane, namely u₁, u₂, u₃, are needed to characterize the transformation. We assert that the transformation by M induced on Argand plane is correct, because it extends the Argand plane ζ = w * exp(im * ψ) * s.ζ by magnitude w and rotates it through angle ψ. So, we established the fact that normalizing the vector of eigenvalues of the transformation _M and reconstructing it to get M leaves the effect on Argand plane invariant.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    u₁ = 𝕍(1.0, 1.0, 0.0, 0.0)\n    u₂ = 𝕍(1.0, 0.0, 1.0, 0.0)\n    u₃ = 𝕍(1.0, 0.0, 0.0, 1.0)\n    for u in [u₁, u₂, u₃]\n        v = 𝕍(vec(M * Quaternion(u.a)))\n        @assert(isnull(v, atol = tolerance), \"v ∈ 𝕍 in not null, $v.\")\n        s = SpinVector(u)\n        s′ = SpinVector(v)\n        if s.ζ == Inf # A Float64 number (the point at infinity)\n            ζ = s.ζ\n        else # A Complex number\n            ζ = w * exp(im * ψ) * s.ζ\n        end\n        ζ′ = s′.ζ\n        if ζ′ == Inf\n            ζ = real(ζ)\n        end\n        @assert(isapprox(ζ, ζ′, atol = tolerance), \"The transformation induced on Argand plane is not correct, $ζ != $ζ′.\")\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"A distinction between coordinates in Argand plane becomes relevant when we want to assert the properties of M on a test variable ζ, without applying M on a control variable ζ′. In the special case where the null direction ζ is the point at infinity, the north pole, we expect for the transformation induced by M to be inconsequential. Because ζ is a union of complex numbers and the singleton of infinity (of type Union{Complex, ComplexF64, Float64}). For an inhomogeneous coordinate system we treat the point at infinity in a different way. For example, for all values of w, if ζ equals infinity then the rotation component of a four-screw should not have any effect on the north pole. But, multiplying positive infinity by a complex number of negative magnitude makes ζ equal to negative infinity, which is not in Argand plane. In that case, we first check the edge case to leave ζ unchanged whenever its value is infinity, ζ = s.ζ. No amount of z-boost and rotation about the z-axis should transform the north pole. Else, ζ transforms as expected: ζ = w * exp(im * ψ) * s.ζ.","category":"page"},{"location":"hopffibration.html#Compute-a-Null-Rotation","page":"Hopf Fibration","title":"Compute a Null Rotation","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"To understand a null rotation, imagine that you are an astronaut in empty space, far away from any celestial object. Looking at the space around you from every direction, you can see your surrounding environment through a spherical viewport. This view is called the celestial sphere of past null directions, as the light from the stars in the past reach your eyes. A null rotation translates Argand plane such that just one null direction is invariant, the point at infinity (the north pole of the celestial sphere). We control the animation of a null rotation by defining a real number a.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    a = sin(progress * 2π)","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Whenever T is positive, we talk about the sphere of future-pointing null directions. At this stage of the animation, the transformation transform defines a null rotation such that the invariant null vector is the direction t + z, the north pole of the sphere of future-pointing null directions, where ζ equals infinity. ","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    transform(x::Quaternion) = begin\n        T, X, Y, Z = vec(x)\n        X̃ = X \n        Ỹ = Y + a * (T - Z)\n        Z̃ = Z + a * Y + 0.5 * a^2 * (T - Z)\n        T̃ = T + a * Y + 0.5 * a^2 * (T - Z)\n        Quaternion(T̃, X̃, Ỹ, Z̃)\n    end\n\n    r₁ = transform(Quaternion(1.0, 0.0, 0.0, 0.0))\n    r₂ = transform(Quaternion(0.0, 1.0, 0.0, 0.0))\n    r₃ = transform(Quaternion(0.0, 0.0, 1.0, 0.0))\n    r₄ = transform(Quaternion(0.0, 0.0, 0.0, 1.0))\n    _M = reshape([vec(r₁); vec(r₂); vec(r₃); vec(r₄)], (4, 4))\n    decomposition = LinearAlgebra.eigen(_M)\n    λ = decomposition.values\n    Λ = [λ[1] 0.0 0.0 0.0; 0.0 λ[2] 0.0 0.0; 0.0 0.0 λ[3] 0.0; 0.0 0.0 0.0 λ[4]]\n    M = real.(decomposition.vectors * Λ * LinearAlgebra.inv(decomposition.vectors))","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Next, we instantiate another spin-vector using M * u = v in order to examine the effect of the transformation M on Argand plane. Specifically, the point ζ from the Argand plane of u transforms into α * s.ζ + β, where α determines the extension of Argand plane and β the translation. The scalar a controls the translation of the plane because β is defined as β = Complex(im * a). We assert that the transformation induced on Argand plane is correct by comparing the approximate equality of the Argand plane of v and the Argand plane of u. Similar to previous animation stages, the induced transformation on Argand plane by M is completely characterized using three different points: u₁, u₂, u₃. After transforming u by M we assert that the result v is still a null vector.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    u₁ = 𝕍(1.0, 1.0, 0.0, 0.0)\n    u₂ = 𝕍(1.0, 0.0, 1.0, 0.0)\n    u₃ = 𝕍(1.0, 0.0, 0.0, 1.0)\n    for u in [u₁, u₂, u₃]\n        v = 𝕍(vec(M * Quaternion(u.a)))\n        @assert(isnull(v, atol = tolerance), \"v ∈ 𝕍 in not a null vector, $v.\")\n        s = SpinVector(u) # TODO: visualize the spin-vectors as frames on S⁺\n        s′ = SpinVector(v)\n        β = Complex(im * a)\n        α = 1.0\n        ζ = α * s.ζ + β\n        ζ′ = s′.ζ\n        if ζ′ == Inf\n            ζ = real(ζ)\n        end\n        @assert(isapprox(ζ, ζ′, atol = tolerance), \"The transformation induced on Argand plane is not correct, $ζ != $ζ′.\")\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Finally, we also assert that the null direction z + t is invariant under the transformation M because it is a null rotation with a fixed null direction at the north pole. The animation of a null rotation is correct if all of the assertions evaluate true.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    v₁ = 𝕍(normalize(ℝ⁴(1.0, 0.0, 0.0, 1.0)))\n    v₂ = 𝕍(vec(M * Quaternion(vec(v₁))))\n    @assert(isnull(v₁, atol = tolerance), \"vector t + z in not null, $v₁.\")\n    @assert(isapprox(v₁, v₂, atol = tolerance), \"The null vector t + z is not invariant under the null rotation, $v₁ != $v₂.\")","category":"page"},{"location":"hopffibration.html#Update-the-Camera","page":"Hopf Fibration","title":"Update the Camera","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The 3D camera of the scene requires the eye position, look at, and up vectors for positioning and orientation. The function update_cam! takes the scene object along with the three required vectors as arguments and updates the camera. But, our camera position and orientation vectors are of type ℝ³, and not Vec3f. To match the argument type we need to use the generic function vec and the splat operator in order to instantiate objects of type Vec3f, because update_cam! is going to match the given type with its own signature.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    GLMakie.update_cam!(lscene.scene, GLMakie.Vec3f(vec(eyeposition)...), GLMakie.Vec3f(vec(lookat)...), GLMakie.Vec3f(vec(up)...))","category":"page"},{"location":"hopffibration.html#Record-an-Animation","page":"Hopf Fibration","title":"Record an Animation","text":"","category":"section"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Updating the base maps requires a base point in the section denoted by q and the transformation M. Then, we use M to update base maps 1, 2, 3 and 4. For we want to have different choices of an inertial reference frame in the tangent space of some point in spacetime. The generic function update! updates base maps by changing the structurally embedded observables, and then the graphical shapes take different forms accordingly.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Although we are talking about points in the bundle, embedded in ℝ⁴ and of type Quaternion, the generic function project converts them to points in ℝ³. The one method of project takes the given point q ∈ S³ ⊂ ℂ² and turns it into a point in the Euclidean space E³ ⊂ ℝ³ using stereographic projection. We identify mathbbR^4 to mathbbC^2 given by (x_1 x_2 x_3 x_4) mapsto (x_1 + i x_2 x_3 + i x_4). Then, the stereographic projection is given by: project S^3 setminus (1 0) to mathbbR^3 given by (x_1 x_2 x_3 x_4) mapsto fracx_2 x_3 x_4^T1 - x_1.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Whenever we call the update! function with an object like basemap1, giving transformation M, two things happn under the hood for deforming the graphics (update!(basemap1, q, gauge1, M)). First, a matrix of type ℝ³ is made, Matrix{ℝ³}. That is the job of one of the methods of the generic function make. The correct dispatch is selected automatically for the job, based on the argument signature (whether the first argument is of type Whirl or Basemap for example). The selected method makes a 2-surface (lattice) of the horizontal section at base point q after transforming by M, with the given segments number, gauge and chart. A chart and a gauge play the role of a choice of local trivialization of the Hopf bundle, as an atlas, for the purpose of constructing a pullback of the Earth's surface.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Second, the matrix of ℝ³ along with the given basemap's observables are passed to the function updatesurface! for updating the observables. For each coordinate component x, y and z in the Euclidean 3-space E^3, there is a corresponding matrix of real numbers, of the same size: (segments by segments). In the type structure of a Basemap or a Whirl there is a tuple whose elements are of type Observable. Each element of the three-tuple in turn contains a matrix of components x, y or z. Reshaping a matrix of 3-vectors into three matrices of scalars is done because when we implicitly instantiated a GLMakie surface in the beginning, we supplied it with three observables representing x, y and z coordinates separately. The generic function buildsurface from the source file surface.jl builds a surface with the given scene, value, color and transparency. Here, the value argument is of type Matrix{ℝ³}. The interface between the construction of our base maps (or whirls) and the graphics engine is essentially a reshaping and type conversion. See surface_tests.jl for use cases.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"Every time we update the observables of a Whirl under transformation by M, we need to access the coordinates of the boundary data (update!(whirls1[i], points[i], gauge1, gauge2, M)). But the coordinates are not changed, and instead the change-of-basis is taken care of by the map M. The coordinate component ϕ is divided by a factor of four since in geographic coordinates longitudes range from -π to +π, whereas latitudes range from -π / 2 to +π / 2 (exp(ϕ / 4 * K(1) + θ / 2 * K(2)))). This division rescales the longitude component of coordinates and allows us to have a square bundle chart, compared to coordinate components θ. Rescaling θ and ϕ aligns the boundaries of horizontal and vertical subspaces. We finish the animation of one time-step after updating the last Whirl.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"The function animate takes as input an integer called frame and updates the scene observables according to the stages that we described earlier. First, it calculates the progress of the animation frames, dividing frame by frames_number. For different properties of Lorentz transformations we have four stages, each stage having its own progress. The signature of the four-screw animator function is compute_fourscrew(progress::Float64, status::Int). For example, stage one animates a proper rotation of Argand plane by calling the function compute_fourscrew with status equal to 1. Stage 2 animates a pure z-boost. Then, stage 3 animates a four-screw. Finally, stage 4 animates a null rotation by calling the function compute_nullrotation. After calling each stage function, we update the camera by calling the function updatecamera.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    animate(frame::Int) = begin\n        progress = frame / frames_number\n        stage = min(totalstages - 1, Int(floor(totalstages * progress))) + 1\n        stageprogress = totalstages * (progress - (stage - 1) * 1.0 / totalstages)\n        println(\"Frame: $frame, Stage: $stage, Total Stages: $totalstages, Progress: $stageprogress\")\n        if stage == 1\n            M = compute_fourscrew(stageprogress, 1)\n        elseif stage == 2\n            M = compute_fourscrew(stageprogress, 2)\n        elseif stage == 3\n            M = compute_fourscrew(stageprogress, 3)\n        elseif stage == 4\n            M = compute_nullrotation(stageprogress)\n        end\n        update!(basemap1, q, gauge1, M)\n        update!(basemap2, q, gauge2, M)\n        update!(basemap3, q, gauge3, M)\n        update!(basemap4, q, gauge4, M)\n        for i in eachindex(whirls1)\n            update!(whirls1[i], points[i], gauge1, gauge2, M)\n            update!(whirls2[i], points[i], gauge2, gauge3, M)\n            update!(whirls3[i], points[i], gauge3, gauge4, M)\n            update!(whirls4[i], points[i], gauge4, gauge5, M)\n        end\n        updatecamera()\n    end","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"To create an animation you need to use the record function. In summary, we instantiated a Scene inside a Figure. Next, we created and animated observables in the scene, on a frame by frame basis. Now, we record the scene by passing the figure fig, the file path of the resulting video, and the range of frame numbers to the record function. The frame is incremented by record and the frame number is passed to the function write to animate the observables. Once the frame number reaches the total number of animation frames, recording is finished and a video file is saved on the hard drive at the file path: gallery/planethopf.mp4.","category":"page"},{"location":"hopffibration.html","page":"Hopf Fibration","title":"Hopf Fibration","text":"    GLMakie.record(fig, joinpath(\"gallery\", \"$modelname.mp4\"), 1:frames_number) do frame\n        animate(frame)\n    end","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Description = \"News Report\"","category":"page"},{"location":"newsreport.html#Lede","page":"News Report","title":"Lede","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 1)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Gauge theories describe local interactions that occur in single spacetime points. Fields on spacetime often cannot be described simply by a map to a fixed vector space, but rather as sections of a non-trivial vector bundle. The fundamental geometric opbject in a gauge theory is a principal bundle over spacetime with structure group given by the gauge group.","category":"page"},{"location":"newsreport.html#Context","page":"News Report","title":"Context","text":"","category":"section"},{"location":"newsreport.html#Where,-When,-Who,-What,-How-and-Why?","page":"News Report","title":"Where, When, Who, What, How and Why?","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Lie groups like the Lorentz and Poincaré groups, which are related to spacetime symmetries, and gauge groups, defining internal symmetries, are important cornerstones. The groups act on fields and leave the spacetime integral over the Lagrangian invariant. The fibers of a principal bundle are sometimes thought of as an internal space at every spacetime point, not belonging to spacetime itself.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 2)","category":"page"},{"location":"newsreport.html#Where-and-When","page":"News Report","title":"Where and When","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 3)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Gauge theories, which are field theories invariant under all gauge transformations, have the huge symmetry group of bundle automorphisms. The diffeomorphism group Diff(M) of spacetime M plays a comparable role in general relativity. In the case of Minkowski spacetime, rotations correspond to Lorentz transformations.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Transformations","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"An active Poincaré transformation sends the world vector U at point O to a world vector V at point hatO. If the transformation also sends the the tetrad at O to a tetrad at hatO, then the coordinates of U are the same as those of V.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 4)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Y Negative","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The abstract sphere mathcaly^- of past null directions represents the observer's celectial sphere in a natural way. The sphere S^-, or its projection to sphere S, gives a more concrete but less invariant realization.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 5)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Stereographic Projection","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The stereographic peojection sends points from the sphere S^+ into the Argand plane. For that purpose, choose the North Pole as a point from which the map projects all other points in the sphere. Then, the union of the plane and the point at infinity yields the Riemann sphere.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 6)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Spherical Coordinates","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Light rays reaching the eyes of an observer pierce a sphere centered at the observer's position. Specify a point in the celectial sphere with a latitude and a longitude. The geometry of the equation zeta = e^i phi cot(theta  2) relates the spherical polar angles theta and phi to the complex stereographic coordinate zeta.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 7)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Stereographic Projection","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"In Minkowski space-time, the intersection of the null cone with a plane yields a sphere. As the plane through curve segment ON varies, it provides the stereographic projection. The point P maps to point P^prime. The parabolic intersection of the sectional plane with the cone has the same intrinsic Euclidean metric as the Argand plane.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 8)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Four-Screw","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A Lorentz transformations in Minkowski space-time chooses an inertial frame for an observer. The properties of Lorentz transformations are best shown on the Riemann sphere, because it has all the null directions of an observer. A proper rotation and a boost in the z direction combine together to make a four-screw.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 9)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Null Rotation","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A null rotation is a type of Lorentz transformation where a single point is left as the only fixed point. The rigid transformation of the Argand plane projects to a transformation on the Riemann sphere. For the Riemann sphere, the points are displaced along circles through the south pole tangent to the y-direction there.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 10)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Null Flag","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A null cone is in the tangent space of spacetime at point O. The representation of a spin-vector requires a pair of infinitesimally separated points on mathcaly^+. A spin-vector is shown in terms of points P and P^prime of a null flag.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 11)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Cross-Sections","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The curve segment connecting point O to point N represents the temporal direction. The temporal direction is normal to a cross-section of the null cone. The angle between the temporal direction of the two sections determines a metric. which measures lengths and angles. After a transformation in the linear space of the generators of the cone, the sides of triangles are multiplied by a scalar number.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 12)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"SO(3)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Construct a complicated object by annihilating and creating boundaries. Look at transformations in the tangent bundle, in order to mark the orientation of boundaries. Follow the following 9 steps for building a vector bundle on the 3-sphere.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Mark the boundary of one copy of SO(3) with sixteen vertices of a hypercube.\nMake a tangent frame at origin point O and parallel transport it to the marked points.\nMark the frames with identifier I.\nParallel transport a triad from point O to a boundary point.\nSwitch coordinate charts from chart N to chart S.\nParallel transport the triad to the center of the counterpart copy of SO(3).\nParallel transport the frame to the boundary points, from the center of the other copy of SO(3).\nMark the frames that are parallel transported from the center of chart S at origin O with identifier II.\nCompare them with frames originated from the center of chart N at origin O.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The twist in frames I compared to frames II is like the reorientation of 3D objects in the Euclidean three-dimensional space. Even though both copies of SO(3) represent the same 3D orientation, they are distinguished from each other as points in the special unitary group of complex dimension two SU(2).","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The equivalence class of twisted frames at boundary points defines a group of rotations SO(3). The clutching construction makes an associated vector bundle with the 3-dimensional sphere S^3. The construction creates a vector bundle through a continuous function denoted by f. The clutching function resolves the conflicts of tangent frames along the boundary. It does so by producing an image elements in SO(3) given an element in the boundary where the two copies of S^3 meet.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 13)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Dirac's scissors problem","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A line passing through the North Pole intersects a section at point P and makes a corresponding intersection on the other section. For showing the metric structure of the sections, choose three points close to each other, such that they make similar triangles in each section. Dirac’s scissors problem shows that a continuous rotation of the structure through 2pi changes the sign of the half plane that is attached to it.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 14)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Spin structure: one-to-two relation between O^uparrow_+(13) and SL(2mathbbC)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"This is a one-to-two relation between a restricted Lorentz transformation and the special linear group of complex dimension two, up to a boost. The topology of the relation is like the one-to-two relation between the special orthogonal group of real dimension three and the special unitary group of complex dimension two. The geometric structure of similar triangles with vertices: P, P^prime and P^primeprime, undergoes unrestricted spin transformations.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 15)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A null flag bundle","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The null-flag bundle F of M, and its twofold covering space, the spin-vector bundle F^prime are shown. The bundle projection map sends a null-flag to an event in space-time M. Null-flags in the fiber space are 4-dimensional, making the total space of the null-flag bundle 8-dimensional.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 16)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A unique frame ABCD","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The map to mathbbR^4, of future null cone and null flag, provides, in continuous fashion, a unique frame ABCD. The following 8 steps construct a unique frame that is right-handed and orthonormal with respect to the Euclidean metric of mathbbR^4.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Generate a spin-vector with two complex numbers and a time sign.\nUse vector sum and the antipode of the spin-vector to find the timelike vector inside the future null cone.\nGenerate another spin-vector off of the first spin-vector such that the two spin-vectors make a null flag.\nNormalize the sum of the flagpole of the original spin-vector and the flagpole of its antipode to give vector A in Minkowski vector space.\nCalculate the axis B by projecting the flagpole to the orthogonal complement hyperplane that has A as its normal vector.\nCalculate axis C by summing the spin-vector that is infinitesimally close to the original spin-vector with the negative of the original spin-vector.\nProject the result onto the orthogonal hyperplane where A is the normal vector.\nFind axis D by subtracting every partial component that is along A, B or C, from a random vector.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 17)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A spin-frame","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"What is the relation between a spin-frame and a Minkowski tetrad? A spin-frame is in a vector space over complex numbers. The spin space has the axioms of an abstract vector space. If a spin-vector is in S^-, then under restricted spin-transformations it does not leave the sphere S^- to S^+.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 18)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Spin-vectors in terms of S^+","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A spin-vector is a ratio between a pair of complex numbers, along with a time sign. Spin-vectors exist in a spin-space that is equipped with three operations: scalar multiplication, inner product and addition. Unless an unrestricted Lorentz transformation is applied, spin-vectors remain in either the sphere of past null directions S^- or S^+.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 19)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Sum of angles","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"In the sphere of future null directions S^+, a circle connects three points: the north pole N, point P and point Q. At point P a tangent vector is denoted by L. Also, at point Q a tangent vector is denoted by M. Any circle on S^+ through points P and Q makes the same sum-of-angles with arrows L and M.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 20)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Argument of the inner product","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The inner product of two spin-vectors omega and kappa is a complex number. When they are combined in a linear fashion, the flagpoles of omega and kappa span a 2-plane. Perform these 4 steps in order to calculate the argument of the scalar product.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Use the Gram-Schmidt orthogonalization method to find the orthogonal complement of the 2-plane.\nFind the intersection of the flagplanes of kappa and omega with the orthogonal complement 2-plane from the previous step.\nThe flagplane of kappa intersects along the line U, whereas the flagplane of omega intersects along the line V.\nFind the angle between U and V to measure the argument of the inner product: pi + 2 argkappa omega (mod 2pi).","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 21)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Sum of spin-vectors in terms of S^+","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The addition of spin-vectors kappa and omega results in another spin-vector kappa + omega in the spin-space. The tails of the flagpoles of kappa, omega and kappa + omega are in a circle. The circumcircle of the triangle made by joining the the three spin-vectors makes the same angle with each one of the flagpoles.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 22)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Sum of spin-vectors in terms of the Argand plane","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"This shows the sum of spin-vectors in a special Lorentz frame that brings out the symmetry at a spacetime event. In this inertial frame, we have three mappings in a circular fashion: kappa mapsto -omega, omega mapsto kappa + omega, and kappa + omega mapsto kappa. This way, the flagpole pair and their sum are collinear in the Argand plane.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 23)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A special frame that brings out the symmetry of spin-vector sum","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"This special frame brings out the symmetry of spin-vector sum. In this inertial frame, we have four mappings in a circular fashion:","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"kappa mapsto frac1sqrt2 (kappa - omega)\nfrac1sqrt2 (kappa - omega) mapsto -omega\nomega mapsto frac1sqrt2 (kappa + omega)\nfrac1sqrt2 (kappa + omega) mapsto kappa","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The two spin-vectors, along with their sum and subtraction, are all in a straight line.","category":"page"},{"location":"newsreport.html#The-Story","page":"News Report","title":"The Story","text":"","category":"section"},{"location":"newsreport.html#Who","page":"News Report","title":"Who","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 24)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The fact that there are 8 gluons, 3 weak gauge bosons, and 1 photon is related to the dimensions of the Lie groups SU(3) and SU(2) times U(1). Connections on principal bundles, correspond to gauge fields whose particle excitations in the associated quantum field theory are the gauge bosons that transmit interactions. Gauge fields correspond to gauge bosons (spin 1 particles) and are described by 1-forms or, dually, vector fields.","category":"page"},{"location":"newsreport.html#Graph","page":"News Report","title":"Graph","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 25)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Edward Witten (1987):","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"If one wants to summarize our knowledge of physics in the briefest possible terms, there are three really fundamental observations:","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Spacetime is a pseudo-Riemannian manifold M, endowed with a metric tensor and governed by geometrical laws.\nOver M is a Principal G-bundle X with a nonabelian gauge group G.\nFermions are sections of (hatS_+ otimes V_R) oplus (hatS_- otimes V_tildeR). R and tildeR are not isomorphic; their failure to be isomorphic explains why the light fermions are light and presumably has its origins in a representation difference Delta in some underlying theory.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"All of this must be supplemented with the understanding that the geometrical laws obeyed by the metric tensor, the gauge fields, and the fermions are to be interpreted in quantum mechanical terms.","category":"page"},{"location":"newsreport.html#What","page":"News Report","title":"What","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 26)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Matter fields in physics are described by smooth sections of vector bundles E associated to principal bundles P via the representations of the gauge group G on a vector space V. In the case of fermions, the associated bundle E is twisted in addition with a spinor bundle S, that is, the bundle is S otimes E. These particles are fermions (spin frac12 particles) and are described by spinors.","category":"page"},{"location":"newsreport.html#Perspective","page":"News Report","title":"Perspective","text":"","category":"section"},{"location":"newsreport.html#How","page":"News Report","title":"How","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 27)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"In physics, the commutator A_mu A_nu in the expression for the curvature 2-form F_munu is interpreted as a direct interaction between gauge bosons described by the gauge field A_mu. The commutator of the conection 1-form leads to cubic and quartic terms in the Yang-Mills Lagrangian. Given a spin structure on a pseudo-Riemannian manifold and the spinor bundle S, we would like to have a covariant derivative on S so that we can define field equations involving derivatives of spinors.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The particular case of a trivial bundle and the general case of a twisted bundle","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"There is a Cartesian product M times V, above a local open region of the base manifold. In a trivial bundle, the points of the fiber bundle are tuples of elements in base M and fiber V. In the case of a nontrivial fiber bundle, use multiple coordinate charts to cover the base manifold M.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 28)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"How twisting in a fiber bundle occurs.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Suppose that the base manifold M is the skin of the globe. Further, suppose that the fiber manifold V is a one-dimensional vector space. Then, the total space of the trivial bundle is like the torus of revolution, whereas the twisted bundle is like the Mobius strip.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 29)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"How to glue two copies of the Riemann sphere for constructing a vector bundle.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The clutching construction makes a vector bundle over the sphere. The twist occurs at the boundary of the two charts. The clutching construction gives a continuous vector field globally.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 30)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A cross-section of a fiber bundle","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A cross-section of a bundle is a continuous image of the base manifold. A section intersects each individual fiber in a single point. The bundle projection map of a section gives the identity.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 31)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Compare a cross-section of a fiber bundle with the zero section.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The complex plane extends to infinity in every direction from the origin. But in the Riemann sphere, all directions from the north pole end up at the south pole, in Antarctica. The line bundle can have a global section, where in fact the Clifford bundle can’t have a global section.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 32)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The Clifford bundle","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Let q be a unit quaternion number and its antipodal point -q its negative. The pointq is in the unit circle, which is embedded in the two-complex-dimensional plane. In the plane mathbbC^2, the unit 3-sphere coordinates assert that w^2 + z^2 = 1.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 33)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The bundle of unit tangent vectors to S^2","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The fibers of the tangent bundle to S^2 are circles. But, each circle-fiber of the Clifford bundle wraps twice around each circle-fiber of the tangent bundle to S^2. Wrapping around each circle-fiber of the Clifford bundle once, yields the antipodal point in the 3-sphere.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 34)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"An example of a complex line bundle","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"In the complex 2-plane w-z, the unit circle is given by the equation w^2 + z^2 = 1. The complex line bundle is the entire complex line, given by Aw + Bz = 0, where A and B are complex numbers. In the complex line bundle, the base space is the ratio A  B, which is proportional to the slope of the line.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 35)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The tangent bundle and the cotangent bundle","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Use the exponential function for translation along a direction in the tangent space to get a tangent vector at q. Specify a cross-section of the tangent bundle in order to have a nowhere vanishing vector field. Define a 1-form by fixing one of the parameters of a scalar product, using elements from the nowhere vanishing vector field.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 36)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A strained line bundle over S^1 with a stretch by a positive factor","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"In order to go from a fixed point to another fixed point along the circle, two paths of different lengths are possible. In the strained bundle, two horizontal flows are combined with a third flow in the vertical direction. Measure the strain in the plane-fibers with a connection on the fiber bundle.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 37)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Types of connection on a manifold","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A tangent vector at a point in the base manifold mathbbR^2 is represented by a particular point in the fiber manifold S^1 above it. A horizontal curve in the tangent bundle T(mathbbR^2) represents the parallel transportation of some vector along a curve in mathbbR^2. Constant transport in the base mathbbR^2 is defined from a notion of horizontal in the circle-bundle mathbbR^2 times S^1.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 38)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"How to make the connection of a strained line bundle over S^1","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Remove a point from circle S^1 to get a trivial region above it.\nApply a linear transformation to the fibers of a copy of the trivial region.\nIdentify the endpoints of the two trivial regions after splitting, such that they make the circle whole again.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A connection measures the scale difference in fibers above one of the regions compared to sections above the other region.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 39)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A local path dependence with curvature","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The bundle curvature is shown, as a horizontal loop fails to close above the unit circle. A complex number, denoted by z, sets the coordinate of a point in the base space mathbbC. The unit circle S^1 in mathbbC is parameterized with z = e^i theta.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 40)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A complex 1-dimensional vector space as the fiber space, where the stretch corresponds to multiplication by a real number.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"We use the explicit connection nabla = fracpartialpartial z - A, where A is a complex smooth function of z. If function A is complex differentiable in a neighborhood of point z, then the bundle curvature vanishes. But, if A = 𝑖  k  z, then for the part of the bundle above the unit circle S^1 we get a real stretch with a given value of k.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 41)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A complex 1-dimensional vector space as the fiber space, where the stretch corresponds to multiplication by a complex number.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"One can also extend the symmetry of the fiber space into a 2-dimensional real vector space. The fiber space can have a complex structure to make it a 1-dimensional complex vector space. In that case, a complex stretch twists the connection nabla with multiplication by a complex number mathbbC.","category":"page"},{"location":"newsreport.html#The-Iconic-Wall","page":"News Report","title":"The Iconic Wall","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 42)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Let q be a point in a principal G-bundle, and A a connection 1-form. Suppose that the point q is a vertex of an infinitesimal parallelogram, where two of the edges intersect. Then, the loop integral of the connection A along the edges of the parallelogram equals the exterior derivative of the connection F_A = dA.","category":"page"},{"location":"newsreport.html#Tome","page":"News Report","title":"Tome","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 43)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Under gravity, a sphere of test particles deforms into an egg-shaped closed surface. From the Newtonian inverse-square law, we know that gravity preserves the volume of the surface delta R_munu = 0. Whenever matter is present R neq 0, then a volume-reducing force field deforms spacetime too.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Einstein's Spacetime has four degrees of freedom, where objects in free fall move along geodesic curves. If the loop integral of the gravitational work 1-from does not vanish, a trajectory is stretched. But, the stretch changes the spacing of the stack representing the 1-form. The deviation of geodesics means that a Hamiltonian flow lifts a circular path to a spiral trajectory. He, discards the Weyl curvature, as R_munu measures the stretch and its trace measures density. Finally, sets the total matter-energy equal to a combination of of the Ricci R_munu and scalar R curvatures. So, a stick figure walks along Penrose steps or the Escher staircase, seemingly going upward forever.","category":"page"},{"location":"newsreport.html#Wrap-Up","page":"News Report","title":"Wrap Up","text":"","category":"section"},{"location":"newsreport.html#Why","page":"News Report","title":"Why","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 44)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"First, Dirac forms define a Dirac mass term in the Lagrangian for all fermions and, together with the Dirac operator, the kinetic term and the interaction term. Then, the Higgs mechanism of mass generation for gauge bosons and fermions are done through Yukawa couplings. Finally, scalar products construct the gauge invariant Yang-Mills Lagrangian.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 45)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Configuration space","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Each point in the configuration space represents a possible configuration of the chassis, reaction wheel and rolling wheel. As the system evolves in time, a sequence of telemetry frames makes a curve in the configuration space. The behavior of the robot is constrained by a function that is defined on the tangent bundle of the configuration space.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 46)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The Lagrangian on the tangent bundle of configuration space T(mathcalC) vs. the Hamiltonian mathcalH on the cotangent bundle T^*(mathcalC) (phase space)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The total space of the Clifford bundle is located at a single spacetime event. As an example, the Yang-Mills Lagrangian is the scalar product of a differential form on a principal G-bundle with itself. Alternatively, the Hamiltonian is defined as a smooth function on the phase space, also known as the cotangent bundle of the configuration space.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 47)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Hamilton's principle","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"One derives the equations of motion for (mostly) kinetic particles such as photons (and neutrinos) using Hamilton's principle. A particle moves through the configuration space such that the integral of the Lagrangian along a path between two fixed points is stationary, under variations of the curve. But, the Yang-Mills Lagrangian is an adjoint-invariant scalar product of the curvature 2-form on a principal G-bundle over spacetime. The adjoint bundle is a vector bundle associated with the principal G-bundle, whose values represent the difference between two connections.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 48)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Staitionary values of a smooth real-valued function f of several variables","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Geodesic curves describe the shortest distance between two fixed points in a smooth manifold. The exterior derivative of a scalar field at a stationary point is very small in every direction. The tangent bundle of the configuration space of a dynamical system has geodesic curves, along which the integral of the Lagrangian is stationary. ","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 49)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The Hamiltonian flow","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The Hamiltonian flow is a section of the cotangent bundle of the configuration space. The Newtonian time-evolution of a particle in free fall, follows a geodesic trajectory in the configuration space. The stack of equally spaced parallel planes represents the gravitational work 1-form and its direction is downward.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 50)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Small oscillations","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"In 1583, Galileo observed that the period of small oscillations is independent of the the maximum distance away from the stable equilibrium point. As it turns out, acceleration and position transform in a linear way, after expanding a power series of the Hamiltonian about the equilibrium point. Since the pendulum rotates in a special orthogonal group, the pendulum’s Newtonian time-evolution is unitary.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 51)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Liouville's theorem","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The boundary of the phase space represents a range of possible initial momentum states. The shape of the boundary is distorted during the time-evolution of the physical system. Liouville’s theorem states that the Hamiltonian flow preserves the volume of the initial phase-space boundary.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 52)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The reduced phase space of T^*(mathcalC)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The value of the Hamiltonian function is constant throughout the motion, which implies the conservation of the sum of kinetic and potential energies. In order to reduce the phase space, substract a partial component of momentum, as a result of projecting momentum onto the line tangent to the trajectory. It’s remarkable that the reduced phase space can be the configuration space of a physical system.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 53)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Hamilton's principle for field Lagrangians","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The Yang-Mills Lagrangian is the magnitude of a 2-form with respect to a connection 1-form on spacetime. The 2-form has an exact symmetry if and only if it is equal to the loop integral of a 1-form along the boundary of an oriented area. But if this 1-form exists, then the integral introduces a scalar constant, and one has the freedom to transform the gauge as a reference level.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 54)","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Hamilton's principle for field Lagrangians","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"The boundary of a well-behaved compact oriented 4-dimensional region is a 3-dimensional region. The boundary consists of those points of the 4-region that do not lie in the interior. Hamilton’s principle states that the integral of a 4-form, scaled by some field Lagrangian, over a 4-dimensional region is stationary.","category":"page"},{"location":"newsreport.html#Porta.jl","page":"News Report","title":"Porta.jl","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"(Image: 55)","category":"page"},{"location":"newsreport.html#What-are-“horizontal-subspaces”-and-what-do-they-have-to-do-with-vector-potentials-and-gauge-fields?","page":"News Report","title":"What are “horizontal subspaces” and what do they have to do with vector potentials and gauge fields?","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"A connection (denoted by A) on a principal G-bundle P assigns a horizontal subspace of the tangent space to each point q in P, in a smooth way. First, the tangent space of a principal bundle P at point q is equal to the direct sum of the vertical subspace and the horizontal subspace at q, for all q in P. Second, the pushforward of the horizontal subspace of the Principal G-bundle P at point q by an action g of the structure group G is equal to the horizontal subspace of the principal G-bundle P at the transformation of the point q by the action g, for all g in G and q in P.","category":"page"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"If the exterior derivative of the curvature 2-form vanishes, then there exists a 1-form potential that acts as a reference level. The vector representation of the 1-form is called a vector potential. But, the 1-form on spacetime is called a gauge field. So gemoterically, the vector potential is normal to the stack of horizontal planes representing the 1-form.","category":"page"},{"location":"newsreport.html#References","page":"News Report","title":"References","text":"","category":"section"},{"location":"newsreport.html","page":"News Report","title":"News Report","text":"Sir Roger Penrose on the The Portal with Eric Weinstein\nMark J.D. Hamilton, Mathematical Gauge Theory: With Applications to the Standard Model of Particle Physics, Springer Cham, DOI, published: 10 January 2018.\nSir Roger Penrose, The Road to Reality, (2004).\nRoger Penrose, Wolfgang Rindler, Spinors and Space-Time, Volume 1: Two-spinor calculus and relativistic fields, (1984).\nM.J.D. Hamilton, The Higgs boson for mathematicians. Lecture notes on gauge theory and symmetry breaking, arXiv preprint arXiv:1512.02632, (2015).\nEdward Witten, Physics and Geometry, (1987).\nThe iconic Wall of Stony Brook University.\nTristan Needham, Visual Differential Geometry and Forms: A Mathematical Drama in Five Acts, Princeton University Press, 2021.\nZachary Treisman, A Young Person's Guide to the Hopf Fibration, 2009.","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Description = \"How the reaction wheel unicycle works.\"","category":"page"},{"location":"reactionwheelunicycle.html#The-Reaction-Wheel-Unicycle","page":"Reaction Wheel Unicycle","title":"The Reaction Wheel Unicycle","text":"","category":"section"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"V_cnt = beginbmatrix dotx - r_w dottheta cos(delta) newline doty - r_w dottheta sin(delta) newline dotz endbmatrix = beginbmatrix 0 newline 0 newline 0 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"dotx = r_w dottheta cos(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"doty = r_w dottheta sin(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"dotz = 0","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial dotq_i) - fracpartial Lpartial q_i = Q_i + sum_k=1^n lambda_k a_ki","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"i = 1 ldots m","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"L = T_total - P_total","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_w2^cpT = beginbmatrix 1  0  0  0 newline 0  cos(alpha)  -sin(alpha)  0 newline 0  sin(alpha)  cos(alpha)  0 newline 0  0  0  1 endbmatrix beginbmatrix 1  0  0  0 newline 0  1  0  0 newline 0  0  1  r_w newline 0  0  0  1 endbmatrix = beginbmatrix 1  0  0  0 newline 0  cos(alpha)  -sin(alpha)  -r_w sin(alpha) newline 0  sin(alpha)  cos(alpha)  r_w cos(alpha) newline 0  0  0  1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_cp^gT = beginbmatrix cos(delta)  -sin(delta)  0  x newline sin(delta)  cos(delta)  0  y newline 0  0  1  0 newline 0  0  0  1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_w2^gT = _cp^gT  times _w2^cpT  = beginbmatrix cos(delta)  -sin(delta) cos(alpha)  sin(delta) sin(alpha)  x + r_w sin(delta) sin(alpha) newline sin(delta)  cos(delta) cos(alpha)  -cos(delta) sin(alpha)  y - r_w cos(delta) sin(alpha) newline 0  sin(alpha)  cos(alpha)  r_w cos(alpha) newline 0  0  0  1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^w2P_w = beginbmatrix 0 newline 0 newline 0 newline 1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gP_w = _w2^gT times ^w2P_w = beginbmatrix x + r_w sin(alpha) sin(delta) newline y - r_w sin(alpha) cos(delta) newline r_w cos(alpha) newline 1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^w2T = beginbmatrix cos(beta)  0  sin(beta)  0 newline 0  1  0  0 newline -sin(beta)  0  cos(beta)  0 newline 0  0  0  1 endbmatrix beginbmatrix 1  0  0  0 newline 0  1  0  0 newline 0  0  1  l_c newline 0  0  0  1 endbmatrix = beginbmatrix cos(beta)  0  sin(beta)  l_c sin(beta) newline 0  1  0  0 newline -sin(beta)  0  cos(beta)  l_c cos(beta) newline 0  0  0  1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gT = _w2^gT times _c^w2T = beginbmatrix _c^gt_11  -sin(delta) cos(alpha)  _c^gt_13  _c^gt_14 newline _c^gt_21  cos(delta) cos(alpha)  _c^gt_23  _c^gt_24 newline -cos(alpha) sin(beta)  sin(alpha)  cos(alpha) cos(beta)  _c^gt_34 newline 0  0  0  1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gt_11 = cos(beta) cos(delta) - sin(alpha) sin(beta) sin(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gt_13 = sin(beta) cos(delta) + sin(alpha) cos(beta) sin(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gt_14 = x + r_w sin(delta) sin(alpha) + l_c sin(beta) cos(delta) + l_c sin(alpha) cos(beta) sin(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gt_21 = cos(beta) sin(delta) + sin(alpha) sin(beta) cos(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gt_23 = sin(beta) sin(delta) - sin(alpha) cos(beta) cos(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gt_24 = y - r_w cos(delta) sin(alpha) + l_c sin(beta) sin(delta) - l_c sin(alpha) cos(beta) cos(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_c^gt_34 = r_w cos(alpha) + l_c cos(alpha) cos(beta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^cP_c = beginbmatrix 0 newline 0 newline 0 newline 1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gP_c = _c^gT times ^cP_c = beginbmatrix ^gp_c1 newline ^gp_c2 newline ^gp_c3 newline 1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gp_c1 = x + r_w sin(alpha) sin(delta) + l_c cos(beta) sin(alpha) sin(delta) + l_c sin(beta) cos(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gp_c2 = y - r_w sin(alpha) cos(delta) - l_c cos(beta) sin(alpha) cos(delta) + l_c sin(beta) sin(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gp_c3 = r_w cos(alpha) + l_c cos(beta) cos(alpha)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^cT = beginbmatrix 1  0  0  0 newline 0  1  0  0 newline 0  0  1  l_cr newline 0  0  0  1 endbmatrix beginbmatrix 1  0  0  0 newline 0  cos(gamma)  -sin(gamma)  0 newline 0  sin(gamma)  cos(gamma)  0 newline 0  0  0  1 endbmatrix beginbmatrix 1  0  0  0 newline 0  1  0  0 newline 0  0  1  0 newline 0  0  0  1 endbmatrix = beginbmatrix 1  0  0  0 newline 0  cos(gamma)  -sin(gamma)  0 newline 0  sin(gamma)  cos(gamma)  l_cr newline 0  0  0  1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gT = _c^gT times _r^cT = beginbmatrix _r^gt_11  _r^gt_12  _r^gt_13  _r^gt_14 newline _r^gt_21  _r^gt_22  _r^gt_23  _r^gt_24 newline -cos(alpha) sin(beta)  _r^gt_32  _r^gt_33  _r^gt_34 newline 0  0  0  1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_11 = cos(beta) cos(delta) - sin(alpha) sin(beta) sin(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_12 = -sin(delta) cos(alpha) cos(gamma) + cos(delta) sin(beta) sin(gamma) + sin(delta) sin(alpha) cos(beta) sin(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_13 = sin(delta) cos(alpha) sin(gamma) + cos(delta) sin(beta) cos(gamma) + sin(delta) sin(alpha) cos(beta) cos(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_14 = 0 + l_cr (cos(delta) sin(beta) + sin(delta) sin(alpha) cos(beta)) + l_c sin(beta) cos(delta) + l_c cos(beta) sin(delta) sin(alpha) + x + r_w sin(delta) sin(alpha)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_21 = cos(beta) sin(delta) + sin(alpha) sin(beta) cos(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_22 = cos(delta) cos(alpha) cos(gamma) + sin(delta) sin(beta) sin(gamma) - cos(delta) sin(alpha) cos(beta) sin(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_23 = -cos(delta) cos(alpha) sin(gamma) + sin(delta) sin(beta) cos(gamma) - cos(delta) sin(alpha) cos(beta) cos(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_24 = l_cr (sin(delta) sin(beta) - cos(delta) sin(alpha) cos(beta)) + l_c sin(beta) sin(delta) - l_c cos(beta) cos(delta) sin(alpha) + y - r_w cos(delta) sin(alpha)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_32 = sin(alpha) cos(gamma) + cos(alpha) cos(beta) sin(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_33 = -sin(alpha) sin(gamma) + cos(alpha) cos(beta) cos(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^gt_34 = l_cr cos(alpha) cos(beta) + l_c cos(beta) cos(alpha) + r_w cos(alpha)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^rP_r = beginbmatrix 0 newline 0 newline 0 newline 1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gP_r = _r^gT times ^rP_r = beginbmatrix ^gp_r1 newline ^gp_r2 newline ^gp_r3 newline 1 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gp_r1 = x + r_w sin(alpha) sin(delta) + (l_c + l_cr) cos(beta) sin(alpha) sin(delta) + (l_c + l_cr) sin(beta) cos(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gp_r2 = y - r_w sin(alpha) cos(delta) - (l_c + l_cr) cos(beta) sin(alpha) cos(delta) + (l_c + l_cr) sin(beta) sin(delta)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"^gp_r3 = r_w cos(alpha) + (l_c + l_cr) cos(beta) cos(alpha)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"V_w = fracdP_wdt","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"V_c = fracdP_cdt","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"V_r = fracdP_rdt","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Omega_w = beginbmatrix 0 newline dottheta newline 0 newline 0 endbmatrix + beginbmatrix dotalpha newline 0 newline 0 newline 0 endbmatrix + _g^w2T times beginbmatrix 0 newline 0 newline dotdelta newline 0 endbmatrix = beginbmatrix 0 newline dottheta newline 0 newline 0 endbmatrix + beginbmatrix dotalpha newline 0 newline 0 newline 0 endbmatrix + _w2^gT^-1 times beginbmatrix 0 newline 0 newline dotdelta newline 0 endbmatrix = beginbmatrix dotalpha newline dottheta + dotdelta sin(alpha) newline dotdelta cos(alpha) endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Omega_c = beginbmatrix 0 newline dotbeta newline 0 newline 0 endbmatrix + _w2^cT times beginbmatrix dotalpha newline 0 newline 0 newline 0 endbmatrix + _g^cT times beginbmatrix 0 newline 0 newline dotdelta newline 0 endbmatrix = beginbmatrix 0 newline dotbeta newline 0 newline 0 endbmatrix + _c^w2T^-1 times beginbmatrix dotalpha newline 0 newline 0 newline 0 endbmatrix + _c^gT^-1 times beginbmatrix 0 newline 0 newline dotdelta newline 0 endbmatrix = beginbmatrix dotalpha cos(beta) - dotdelta cos(alpha) sin(beta) newline dotbeta + dotdelta sin(alpha) newline dotalpha sin(beta) + dotdelta cos(alpha) cos(beta) newline 0 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"_r^w2T = _w2^gT^-1 times _r^gT","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Omega_r = beginbmatrix dotgamma newline 0 newline 0 newline 0 endbmatrix + _c^rT times beginbmatrix 0 newline dotbeta newline 0 newline 0 endbmatrix + _w2^rT times beginbmatrix dotalpha newline 0 newline 0 newline 0 endbmatrix + _g^rT times beginbmatrix 0 newline 0 newline dotdelta newline 0 endbmatrix = beginbmatrix dotgamma newline 0 newline 0 newline 0 endbmatrix + _r^cT^-1 times beginbmatrix 0 newline dotbeta newline 0 newline 0 endbmatrix + _r^w2T^-1 times beginbmatrix dotalpha newline 0 newline 0 newline 0 endbmatrix + _r^gT^-1 times beginbmatrix 0 newline 0 newline dotdelta newline 0 endbmatrix = beginbmatrix dotgamma + dotalpha cos(beta) - dotdelta cos(alpha) sin(beta) newline omega_r2 newline omega_r3 newline 0 endbmatrix","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"omega_r2 = dotbeta cos(gamma) + dotalpha sin(beta) sin(gamma) + dotdelta sin(alpha) cos(gamma) + dotdelta cos(alpha) cos(beta) sin(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"omega_r3 = -dotbeta sin(gamma) + dotalpha sin(beta) cos(gamma) - dotdelta sin(alpha) sin(gamma) + dotdelta cos(alpha) cos(beta) cos(gamma)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"T_w = frac12 m_w V_w^T V_w + frac12 Omega_w^T I_w Omega_w","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"P_w = m_w g P_w(3)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"T_c = frac12 m_c V_c^T V_c + frac12 Omega_c^T I_c Omega_c","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"P_c = m_c g P_c(3)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"T_r = frac12 m_r V_r^T V_r + frac12 Omega_r^T I_r Omega_r","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"P_r = m_r g P_r(3)","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"T_total = T_w + T_c + T_r","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"P_total = P_w + P_c + P_r","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"m = 7  n = 2","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial dotx) - fracpartial Lpartial x = lambda_1","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial doty) - fracpartial Lpartial y = lambda_2","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial dottheta) - fracpartial Lpartial theta = tau_w - r_w cos(delta) lambda_1 - r_w sin(delta) lambda_2","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial dotbeta) - fracpartial Lpartial beta = -tau_w","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial dotalpha) - fracpartial Lpartial alpha = 0","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial dotgamma) - fracpartial Lpartial gamma = tau_r","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracddt(fracpartial Lpartial dotdelta) - fracpartial Lpartial delta = 0","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Wheel dynamics:","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"m_11 ddotbeta + m_12 ddotgamma + m_13 ddotdelta + m_14 ddottheta + c_11 dotbeta^2 + c_12 dotgamma^2 + c_13 dotdelta^2 + c_14 dotalpha dotdelta + c_15 dotbeta dotgamma + c_16 dotbeta dotdelta + c_17 dotgamma dotdelta = tau_w","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Chassis longitudinal dynamics:","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"m_21 ddotalpha + m_22 ddotbeta + m_23 ddotdelta + m_24 ddottheta + c_21 dotalpha^2 + c_22 dotdelta^2 + c_23 dotalpha dotgamma + c_24 dotalpha dotdelta + c_25 dotbeta dotgamma + c_26 dotgamma dotdelta + c_27 dotdelta dottheta + g_21 = -tau_w","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Chassis lateral dynamics:","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"m_31 ddotalpha + m_32 ddotbeta + m_33 ddotgamma + m_34 ddotdelta + c_31 dotbeta^2 + c_32 dotgamma^2 + c_33 dotdelta^2 + c_34 dotalpha dotbeta + c_35 dotalpha dotgamma + c_36 dotbeta dotgamma + c_37 dotbeta dotdelta + c_38 dotgamma dotdelta + c_39 dotdelta dottheta = 0","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Reaction wheel dynamics:","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"m_41 ddotalpha + m_42 ddotgamma + m_43 ddotdelta + m_44 ddottheta + c_41 dotalpha^2 + c_42 dotbeta^2 + c_43 dotdelta^2 + c_44 dotalpha dotbeta + c_45 dotalpha dotdelta + c_46 dotbeta dotdelta + c_47 dotdelta dottheta + g_41 = tau_r","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Turning dynamics:","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"m_51 ddotalpha + m_52 ddotbeta + m_53 ddotgamma + m_54 ddotdelta + m_55 ddottheta + c_51 dotalpha^2 + c_52 dotbeta^2 + c_53 dotgamma^2 + c_54 dotalpha dotbeta + c_55 dotalpha dotgamma + c_56 dotalpha dotdelta + c_57 dotalpha dottheta + c_58 dotbeta dotgamma + c_59 dotbeta dotdelta + c_510 dotgamma dotdelta + c_511 dotdelta dottheta = 0","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"fracmathrmd xleft( t right)mathrmdt = r_w cosleft( deltaleft( t right) right) fracmathrmd thetaleft( t right)mathrmdt newline fracmathrmd yleft( t right)mathrmdt = r_w sinleft( deltaleft( t right) right) fracmathrmd thetaleft( t right)mathrmdt newline fracmathrmd zleft( t right)mathrmdt = 0 newline I_w = left beginarraycccc I_w1  0  0  0 newline 0  I_w2  0  0 newline 0  0  I_w3  0 newline 0  0  0  0 newline endarray right newline I_c = left beginarraycccc I_c1  0  0  0 newline 0  I_c2  0  0 newline 0  0  I_c3  0 newline 0  0  0  0 newline endarray right newline I_r = left beginarraycccc I_r1  0  0  0 newline 0  I_r2  0  0 newline 0  0  I_r3  0 newline 0  0  0  0 newline endarray right newline mathrmw2cpTleft( t right) = left beginarraycccc 1  0  0  0 newline 0  cosleft( alphaleft( t right) right)   - sinleft( alphaleft( t right) right)   - r_w sinleft( alphaleft( t right) right) newline 0  sinleft( alphaleft( t right) right)  cosleft( alphaleft( t right) right)  r_w cosleft( alphaleft( t right) right) newline 0  0  0  1 newline endarray right newline mathrmcpgTleft( t right) = left beginarraycccc cosleft( deltaleft( t right) right)   - sinleft( deltaleft( t right) right)  0  xleft( t right) newline sinleft( deltaleft( t right) right)  cosleft( deltaleft( t right) right)  0  yleft( t right) newline 0  0  1  0 newline 0  0  0  1 newline endarray right newline mathrmw2gTleft( t right) = mathrmcpgTleft( t right) mathrmw2cpTleft( t right) newline w2P_w = left beginarrayc 0 newline 0 newline 0 newline 1 newline endarray right newline mathrmgP_wleft( t right) = mathrmw2gTleft( t right) w2P_w newline mathrmcw2Tleft( t right) = left beginarraycccc cosleft( betaleft( t right) right)  0  sinleft( betaleft( t right) right)  l_c sinleft( betaleft( t right) right) newline 0  1  0  0 newline  -sinleft( betaleft( t right) right)  0  cosleft( betaleft( t right) right)  l_c cosleft( betaleft( t right) right) newline 0  0  0  1 newline endarray right newline mathrmcgTleft( t right) = mathrmw2gTleft( t right) mathrmcw2Tleft( t right) newline cP_c = left beginarrayc 0 newline 0 newline 0 newline 1 newline endarray right newline mathrmgP_cleft( t right) = mathrmcgTleft( t right) cP_c newline mathrmrcTleft( t right) = left beginarraycccc 1  0  0  0 newline 0  cosleft( gammaleft( t right) right)   - sinleft( gammaleft( t right) right)  0 newline 0  sinleft( gammaleft( t right) right)  cosleft( gammaleft( t right) right)  l_cr newline 0  0  0  1 newline endarray right newline mathrmrgTleft( t right) = mathrmcgTleft( t right) mathrmrcTleft( t right) newline rP_r = left beginarrayc 0 newline 0 newline 0 newline 1 newline endarray right newline mathrmgP_rleft( t right) = mathrmrgTleft( t right) rP_r newline mathrmrw2Tleft( t right) = mathrminvleft( mathrmw2gTleft( t right) right) mathrmrgTleft( t right) newline V_wleft( t right) = mathrmbroadcastleft( D mathrmgP_wleft( t right) right) newline V_cleft( t right) = mathrmbroadcastleft( D mathrmgP_cleft( t right) right) newline V_rleft( t right) = mathrmbroadcastleft( D mathrmgP_rleft( t right) right) newline Omega_wleft( t right) = mathrmbroadcastleft( + left beginarrayc _derivativeleft( alphaleft( t right) t 1 right) newline _derivativeleft( thetaleft( t right) t 1 right) newline 0 newline 0 newline endarray right mathrminvleft( mathrmw2gTleft( t right) right) left beginarrayc 0 newline 0 newline _derivativeleft( deltaleft( t right) t 1 right) newline 0 newline endarray right right) newline Omega_cleft( t right) = mathrmbroadcastleft( + mathrmbroadcastleft( + left beginarrayc 0 newline _derivativeleft( betaleft( t right) t 1 right) newline 0 newline 0 newline endarray right mathrminvleft( mathrmcw2Tleft( t right) right) left beginarrayc _derivativeleft( alphaleft( t right) t 1 right) newline 0 newline 0 newline 0 newline endarray right right) mathrminvleft( mathrmcgTleft( t right) right) left beginarrayc 0 newline 0 newline _derivativeleft( deltaleft( t right) t 1 right) newline 0 newline endarray right right) newline Omega_rleft( t right) = mathrmbroadcastleft( + mathrmbroadcastleft( + mathrmbroadcastleft( + left beginarrayc _derivativeleft( gammaleft( t right) t 1 right) newline 0 newline 0 newline 0 newline endarray right mathrminvleft( mathrmrcTleft( t right) right) left beginarrayc 0 newline _derivativeleft( betaleft( t right) t 1 right) newline 0 newline 0 newline endarray right right) mathrminvleft( mathrmrw2Tleft( t right) right) left beginarrayc _derivativeleft( alphaleft( t right) t 1 right) newline 0 newline 0 newline 0 newline endarray right right) mathrminvleft( mathrmrgTleft( t right) right) left beginarrayc 0 newline 0 newline _derivativeleft( deltaleft( t right) t 1 right) newline 0 newline endarray right right) newline T_wleft( t right) = mathrmadjointleft( V_wleft( t right) right) mathrmbroadcastleft( * V_wleft( t right) mathrmRefleft( 05 m_w right) right)_1 + mathrmadjointleft( Omega_wleft( t right) right) mathrmbroadcastleft( * I_w Omega_wleft( t right) 05 right)_1 newline P_wleft( t right) = g mathrmgP_wleft( t right)_3 m_w newline T_cleft( t right) = mathrmadjointleft( V_cleft( t right) right) mathrmbroadcastleft( * V_cleft( t right) mathrmRefleft( 05 m_c right) right)_1 + mathrmadjointleft( Omega_cleft( t right) right) mathrmbroadcastleft( * I_c Omega_cleft( t right) 05 right)_1 newline P_cleft( t right) = g mathrmgP_cleft( t right)_3 m_c newline T_rleft( t right) = mathrmadjointleft( V_rleft( t right) right) mathrmbroadcastleft( * V_rleft( t right) mathrmRefleft( 05 m_r right) right)_1 + mathrmadjointleft( Omega_rleft( t right) right) mathrmbroadcastleft( * I_r Omega_rleft( t right) 05 right)_1 newline P_rleft( t right) = g mathrmgP_rleft( t right)_3 m_r newline T_totalleft( t right) = T_rleft( t right) + T_cleft( t right) + T_wleft( t right) newline P_totalleft( t right) = P_wleft( t right) + P_cleft( t right) + P_rleft( t right) newline Lleft( t right) = T_totalleft( t right) - P_totalleft( t right) newline","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"L = 05 left( left( fracfracmathrmd alphaleft( t right)mathrmdt cosleft( betaleft( t right) right)sin^2left( betaleft( t right) right) + cos^2left( betaleft( t right) right) + fracleft(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) + left(  - sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) fracmathrmd deltaleft( t right)mathrmdtsinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right) left(  - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) + cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) + cosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( betaleft( t right) right) right) + left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + left(  - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) + cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right) right) right)^2 I_c1 + left( fracmathrmd betaleft( t right)mathrmdt + fracleft(  - left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) - left(  - sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) fracmathrmd deltaleft( t right)mathrmdtsinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right) left(  - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) + cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) + cosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( betaleft( t right) right) right) + left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + left(  - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) + cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right) right) right)^2 I_c2 + left( fracsinleft( betaleft( t right) right) fracmathrmd alphaleft( t right)mathrmdtsin^2left( betaleft( t right) right) + cos^2left( betaleft( t right) right) + fracleft( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) + left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) fracmathrmd deltaleft( t right)mathrmdtsinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right) left(  - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) + cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) + cosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( betaleft( t right) right) right) + left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + left(  - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) + cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right) right) right)^2 I_c3 right) + 05 left( left( fracmathrmd gammaleft( t right)mathrmdt + fracleft( left( frac - sinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) fracmathrmd alphaleft( t right)mathrmdtleft( left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( fracleft( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( frac - left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( left( frac - sinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( fracleft( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + fracleft( left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) - left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) right) fracmathrmd deltaleft( t right)mathrmdtleft( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) right) + left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) - left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right) left( cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) sinleft( betaleft( t right) right) right) right)^2 I_r1 + left( fracleft(  - left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) - left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) fracmathrmd alphaleft( t right)mathrmdtleft( left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( fracleft( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( frac - left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( left( frac - sinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( fracleft( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + fracleft(  - left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) - left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) - left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) fracmathrmd deltaleft( t right)mathrmdtleft( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) right) + left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) - left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right) left( cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) sinleft( betaleft( t right) right) right) + fracfracmathrmd betaleft( t right)mathrmdt cosleft( gammaleft( t right) right)sin^2left( gammaleft( t right) right) + cos^2left( gammaleft( t right) right) right)^2 I_r2 + left( fracleft( left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) fracmathrmd alphaleft( t right)mathrmdtleft( left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( fracleft( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( left( frac - sinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( frac - left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( frac - left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( left( frac - sinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fraccosleft( alphaleft( t right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + left( fracsinleft( deltaleft( t right) right) left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) cosleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) left( fracsinleft( deltaleft( t right) right) left(  - sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right) left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + frac - left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) right) left( fracleft( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracleft( cos^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sinleft( deltaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right)cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right) + fracleft( left( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) - left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) fracmathrmd deltaleft( t right)mathrmdtleft( cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) left( left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) right) + left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) - left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) sinleft( gammaleft( t right) right) right) left(  - cosleft( alphaleft( t right) right) sinleft( betaleft( t right) right) left( cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - cosleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left(  - sinleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) + left( sinleft( deltaleft( t right) right) cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) + left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) cosleft( gammaleft( t right) right) right) left( left( cosleft( gammaleft( t right) right) sinleft( alphaleft( t right) right) + cosleft( alphaleft( t right) right) sinleft( gammaleft( t right) right) cosleft( betaleft( t right) right) right) left( sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) + sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) - cosleft( alphaleft( t right) right) left(  - cosleft( alphaleft( t right) right) cosleft( gammaleft( t right) right) cosleft( deltaleft( t right) right) - sinleft( gammaleft( t right) right) left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) sinleft( betaleft( t right) right) right) + frac - fracmathrmd betaleft( t right)mathrmdt sinleft( gammaleft( t right) right)sin^2left( gammaleft( t right) right) + cos^2left( gammaleft( t right) right) right)^2 I_r3 right) + 05 left( fracleft( fracmathrmd deltaleft( t right)mathrmdt right)^2 left( sin^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) cosleft( alphaleft( t right) right) right)^2 I_w3left( cos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) right)^2 + left( fracmathrmd alphaleft( t right)mathrmdt right)^2 I_w1 + left( fracleft( sin^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) + cos^2left( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) fracmathrmd deltaleft( t right)mathrmdtcos^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) sin^2left( deltaleft( t right) right) + left( cos^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) + sin^2left( alphaleft( t right) right) cosleft( deltaleft( t right) right) right) cosleft( deltaleft( t right) right) + fracmathrmd thetaleft( t right)mathrmdt right)^2 I_w2 right) + 05 m_c left( left( fracmathrmdmathrmdt left( r_w cosleft( alphaleft( t right) right) + l_c cosleft( alphaleft( t right) right) cosleft( betaleft( t right) right) right) right)^2 + left( fracmathrmdmathrmdt left( xleft( t right) + l_c sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + r_w sinleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) + l_c sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) right)^2 + left( fracmathrmdmathrmdt 1 right)^2 + left( fracmathrmdmathrmdt left( yleft( t right) + l_c sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - r_w cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) - l_c cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)^2 right) + 05 m_r left( left( fracmathrmdmathrmdt left( xleft( t right) + l_c sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + r_w sinleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) + l_c sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) + l_cr left( sinleft( betaleft( t right) right) cosleft( deltaleft( t right) right) + sinleft( deltaleft( t right) right) cosleft( betaleft( t right) right) sinleft( alphaleft( t right) right) right) right) right)^2 + left( fracmathrmdmathrmdt left( yleft( t right) + l_c sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - r_w cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) - l_c cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) + l_cr left( sinleft( deltaleft( t right) right) sinleft( betaleft( t right) right) - cosleft( betaleft( t right) right) cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right) right)^2 + left( fracmathrmdmathrmdt 1 right)^2 + left( fracmathrmdmathrmdt left( r_w cosleft( alphaleft( t right) right) + l_c cosleft( alphaleft( t right) right) cosleft( betaleft( t right) right) + l_cr cosleft( alphaleft( t right) right) cosleft( betaleft( t right) right) right) right)^2 right) + 05 m_w left( left( fracmathrmdmathrmdt r_w cosleft( alphaleft( t right) right) right)^2 + left( fracmathrmdmathrmdt left( yleft( t right) - r_w cosleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)^2 + left( fracmathrmdmathrmdt left( xleft( t right) + r_w sinleft( deltaleft( t right) right) sinleft( alphaleft( t right) right) right) right)^2 + left( fracmathrmdmathrmdt 1 right)^2 right) - g m_w r_w cosleft( alphaleft( t right) right) - g left( r_w cosleft( alphaleft( t right) right) + l_c cosleft( alphaleft( t right) right) cosleft( betaleft( t right) right) right) m_c - g left( r_w cosleft( alphaleft( t right) right) + l_c cosleft( alphaleft( t right) right) cosleft( betaleft( t right) right) + l_cr cosleft( alphaleft( t right) right) cosleft( betaleft( t right) right) right) m_r","category":"page"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"left beginarrayc _derivativeleft( 0 t 1 right) newline _derivativeleft( 0 t 1 right) newline _derivativeleft( 0 t 1 right) newline _derivativeleft( 0 t 1 right) newline _derivativeleft( 0 t 1 right) newline _derivativeleft( 0 t 1 right) newline _derivativeleft( 0 t 1 right) newline endarray right = left beginarrayc lambda_1 newline lambda_2 newline tau_w - r_w sinleft( deltaleft( t right) right) lambda_2 - r_w cosleft( deltaleft( t right) right) lambda_1 newline  -tau_w newline 0 newline tau_p newline 0 newline endarray right","category":"page"},{"location":"reactionwheelunicycle.html#Reference","page":"Reaction Wheel Unicycle","title":"Reference","text":"","category":"section"},{"location":"reactionwheelunicycle.html","page":"Reaction Wheel Unicycle","title":"Reaction Wheel Unicycle","text":"Yohanes Daud, Abdullah Al Mamun and Jian-Xin Xu, Dynamic modeling and characteristics analysis of lateral-pendulum unicycle robot, Robotica (2017) volume 35, pp. 537–568. Cambridge University Press 2015, doi: 10.1017/S0263574715000703.\nSebastian Trimpe and Raffaello D’Andrea, Accelerometer-based Tilt Estimation of a Rigid Body with only Rotational Degrees of Freedom, 2010 IEEE International Conference on Robotics and Automation, Anchorage Convention District, May 3-8, 2010, Anchorage, Alaska, USA.\nK. G. Vamvoudakis, D. Vrabie and F. L. Lewis, \"Online adaptive learning of optimal control solutions using integral reinforcement learning,\" 2011 IEEE Symposium on Adaptive Dynamic Programming and Reinforcement Learning (ADPRL), Paris, France, 2011, pp. 250-257, doi: 10.1109/ADPRL.2011.5967359.\nY. Engel, S. Mannor, and R. Meir, “The kernel recursive least-squares algorithm,” IEEE Transactions on Signal Processing, vol. 52, no. 8, pp. 2275–2285, 2004.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Description = \"Read the documentation of the Porta.jl project.\"","category":"page"},{"location":"index.html#Geometrize-the-quantum!","page":"Home","title":"Geometrize the quantum!","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"This project is inspired by Eric Weinstein's Graph-Wall-Tome (GWT) project. Watch visual models on the YouTube channel.","category":"page"},{"location":"index.html#Requirements","page":"Home","title":"Requirements","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"CSV\nDataFrames\nFileIO\nGeometryBasics\nGLMakie","category":"page"},{"location":"index.html#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"You can install Porta by running this (in the REPL):","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"]add Porta","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"or,","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pkg.add(\"Porta\")","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"or get the latest experimental code.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"]add https://github.com/iamazadi/Porta.jl.git","category":"page"},{"location":"index.html#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"For client-side code see the tests, and check out the models directory for examples.","category":"page"},{"location":"index.html#Status","page":"Home","title":"Status","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Logic [Doing]\nSet Theory [TODO]\nTopology [TODO]\nTopological Manifolds [TODO]\nDifferentiable Manifolds [TODO]\nBundles [TODO]\nGeometry: Symplectic, Metric [TODO]\nDocumentation [TODO]\nGeometric Unity [TODO]","category":"page"},{"location":"index.html#References","page":"Home","title":"References","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Physics and Geometry, Edward Witten, (1987)\nThe iconic Wall of Stony Brook University\nThe Road to Reality, Sir Roger Penrose, (2004)\nA Portal Special Presentation- Geometric Unity: A First Look\nPlanet Hopf, Dror Bar-Natan, (2010)\nSPINORS AND SPACE-TIME, Volume 1: Two-spinor calculus and relativistic fields, Roger Penrose, Wolfgang Rindler, (1984)\nA Young Person's Guide to the Hopf Fibration, Zachary Treisman, (2009)\nMathematical Gauge Theory, with Applications to the Standard Model of Particle Physics, Mark J.D. Hamilton, (2018)\nDynamics in the Hopf bundle, the geometric phase and implications for dynamical systems, Rupert Way, (2008)","category":"page"}]
}
